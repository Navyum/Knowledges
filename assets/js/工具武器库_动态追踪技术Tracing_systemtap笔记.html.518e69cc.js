"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[52478],{36954:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>h,data:()=>k});var n=a(6254);const l={},h=(0,a(36995).A)(l,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,i[0]||(i[0]=[(0,n.Fv)('<h2 id="笔记" tabindex="-1"><a class="header-anchor" href="#笔记"><span>笔记</span></a></h2><ul><li>SystemTap的语法基础跟C语言类似，这里只记录存在差异的点和systemtap特有的语法</li><li>SystemTap的语言是<code>强类型、无声明的过程式语言</code>，受dtrace和awk的启发</li></ul><hr><h2 id="一、命令行参数" tabindex="-1"><a class="header-anchor" href="#一、命令行参数"><span>一、命令行参数</span></a></h2><p>以下列举几个常用的参数</p><h3 id="x-pid" tabindex="-1"><a class="header-anchor" href="#x-pid"><span>-x PID</span></a></h3><p>-x用于传递PID参数给systemtap脚本，程序内部可以通过内置函数<code>target()</code>获取到 e.g.：<code>target() == pid()</code></p><h3 id="t-seconds" tabindex="-1"><a class="header-anchor" href="#t-seconds"><span>-T seconds</span></a></h3><p>-T用于设置脚本执行时间， seconds秒之后退出</p><h3 id="l" tabindex="-1"><a class="header-anchor" href="#l"><span>-L</span></a></h3><p>列举出二进制文件对应的函数在哪里（所在文件和行数）。 <span style="color:rgb(255, 41, 65);">注意：二进制文件必须有调试信息</span> e.g.：<code>stap -L &#39;process(&quot;/usr/local/openresty/nginx/sbin/nginx&quot;).function(&quot;*&quot;)&#39;</code></p><h3 id="g-var-val" tabindex="-1"><a class="header-anchor" href="#g-var-val"><span>-G VAR=VAL</span></a></h3><p>设置全局变量VAR的值为VAL，并传入stp脚本</p><h3 id="i-tapset-dir" tabindex="-1"><a class="header-anchor" href="#i-tapset-dir"><span>-I Tapset_DIR</span></a></h3><p>添加tapset扩展，例如官方扩展、nginx tapset 注意：添加扩展后，在相应的脚本中还需要引入 e.g.</p><div class="language-stp line-numbers-mode" data-highlighter="shiki" data-ext="stp" data-title="stp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># stap++ -I ./tapset -x 4031 ngx-sync-get.stp</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>@use nginx.request</span></span>\n<span class="line"><span>probe process(&quot;x&quot;).function(&quot;f&quot;){</span></span>\n<span class="line"><span>...</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、systemtap脚本分类" tabindex="-1"><a class="header-anchor" href="#二、systemtap脚本分类"><span>二、systemtap脚本分类</span></a></h2><ul><li>探测脚本</li><li>tapset脚本（类似于库的概念）</li></ul><hr><h2 id="systemtap主要外层结构" tabindex="-1"><a class="header-anchor" href="#systemtap主要外层结构"><span>systemtap主要外层结构</span></a></h2><ul><li>probes 探测</li><li>function 函数</li></ul><hr><h2 id="三、探测事件定义" tabindex="-1"><a class="header-anchor" href="#三、探测事件定义"><span>三、探测事件定义</span></a></h2><div class="language-stp line-numbers-mode" data-highlighter="shiki" data-ext="stp" data-title="stp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>probe event { </span></span>\n<span class="line"><span>  STMT </span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>即：探测事件 + 探测声明</p><p>e.g.</p><ul><li><em>probe kernel.function(&quot;tcp</em>&quot;){ ... }*</li><li><em>probe process(&quot;nginx&quot;).function(&quot;ngx_</em>&quot;){ ... }*</li></ul><h3 id="探测事件分类" tabindex="-1"><a class="header-anchor" href="#探测事件分类"><span>探测事件分类</span></a></h3><ul><li>按照事件类型分类： <ul><li><p>同步事件：程序执行到特定代码位置时，触发同步事件（参考断点）</p><ul><li>与代码相关的都是同步事件</li></ul></li><li><p>异步事件：与程序代码、位置无关，通过定时器、计数器触发（代码无关）,num表示执行的顺序权重</p><ul><li>begin(num) 在脚本开始执行</li><li>end(num) 在脚本结束执行，发生错误不会执行</li><li>timer(tm) 定义定期触发的探测点</li><li>never 用不执行</li><li>error(num) 在脚本发生错误时执行</li></ul></li></ul></li><li>按照探测点功能分类： <ul><li>内核事件：<em>kernel.function(PATTERN)</em></li><li>内核模块事件：<em>module(MODULE).function(PATTERN)</em></li><li>系统调用：<em>syscall</em></li><li>用户事件：<em>process(PATH).function(PATTERN)</em></li></ul></li></ul><h2 id="四、探测点" tabindex="-1"><a class="header-anchor" href="#四、探测点"><span>四、探测点</span></a></h2><h3 id="pattern-语法" tabindex="-1"><a class="header-anchor" href="#pattern-语法"><span>PATTERN 语法</span></a></h3><p><code>函数名[@文件名][:行号]</code> e.g.：<code>ngx_http_writer@src/http/ngx_http_request.c:2786</code> 注意：函数名支持使用通配符*的写法</p><h3 id="function、statement区别" tabindex="-1"><a class="header-anchor" href="#function、statement区别"><span>function、statement区别</span></a></h3><p>探测事件除了用<code>function</code>，还可以使用<code>statement</code><em>process(PATH).statement(PATTERN)</em> statement用来在精确的位置放置一个探测点，暴露在该位置可见的局部变量。所以需要指定文件名和对应行号。 一般用来观察变量的多次变化情况</p><h3 id="事件调用时机" tabindex="-1"><a class="header-anchor" href="#事件调用时机"><span>事件调用时机</span></a></h3><p>在不同的时机定义探测点，例如函数调用、函数返回：</p><ul><li>call</li><li>return</li></ul><p>e.g：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>probe kernel.function(&quot;*@net/socket.c&quot;).call {</span></span>\n<span class="line"><span>  printf (&quot;%s -&gt; %s\\n&quot;, thread_indent(1), probefunc())</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>probe kernel.function(&quot;*@net/socket.c&quot;).return {</span></span>\n<span class="line"><span>  printf (&quot;%s &lt;- %s\\n&quot;, thread_indent(-1), probefunc())</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用户空间探测" tabindex="-1"><a class="header-anchor" href="#用户空间探测"><span>用户空间探测</span></a></h3><p>用户空间内定义不同的时机的探测</p><ul><li>当用户程序函数探测：<em>process(PATH).function(PATTERN)</em></li><li>当用户程序进程创建：<em>process(PATH).begin</em></li><li>当用户程序进程销毁：<em>process(PATH).end</em></li><li>当用户程序线程创建：<em>process(PATH).thread.begin</em></li><li>当用户程序线程销毁：<em>process(PATH).thread.end</em></li><li>当用户程序发生系统调用：process(PATH).syscall</li><li>当用户程序系统调用返回：process(PATH).syscall.return</li></ul><h2 id="五、探测点的stmt" tabindex="-1"><a class="header-anchor" href="#五、探测点的stmt"><span>五、探测点的STMT</span></a></h2><h3 id="脚本变量" tabindex="-1"><a class="header-anchor" href="#脚本变量"><span>脚本变量</span></a></h3><ul><li>使用<em>global</em>关键字定义全局变量</li><li>变量无需申明类型；在printf时，需要指定类型</li></ul><h4 id="目标变量" tabindex="-1"><a class="header-anchor" href="#目标变量"><span>目标变量</span></a></h4><ul><li>在待探测程序的源码中，该位置可见的变量值</li><li>如果目标变量是局部变量，可以<code>$varname</code>的方式获取</li><li>如果目标变量是全局变量，可以通过<code>@var(&quot;varname@src/file.c&quot;)</code>或者<code>@var(&quot;varname&quot;, &quot;/path/to/exe/or/lib&quot;)</code>方式获取</li></ul><h4 id="目标变量美化" tabindex="-1"><a class="header-anchor" href="#目标变量美化"><span>目标变量美化</span></a></h4><ul><li>特殊的变量 <ul><li><code>$$vars</code>：探针点作用域内的每个变量（局部变量 + 函数参数）</li><li><code>$$locals</code>：探针点作用域内的局部变量</li><li><code>$$vars</code>：探针点作用域内的函数参数</li><li><code>$$vars</code>：探针点的返回值，仅当探针存在返回值时可用</li></ul></li><li><code>$</code>后缀的使用 <ul><li><code>$</code>后缀： 美化非结构体指针字段，例如打印指针指向的常量值</li><li><code>$$</code>后缀： 美化结构体中的字段，解析结构体中的字段</li><li>注意事项：<code>$$</code>后缀受最大字符串大小的限制，容易被截断（256/512字节）。可以使用<code>MAXSTRINGLEN</code>修改</li></ul></li><li>结构体成员 <ul><li>使用 -&gt; 操作符获取</li><li>e.g. <code>printf(&quot;%s\\n&quot;, $file-&gt;f_pos_lock$</code></li></ul></li></ul><h4 id="cast-目标变量类型转换" tabindex="-1"><a class="header-anchor" href="#cast-目标变量类型转换"><span>@cast 目标变量类型转换</span></a></h4><ul><li>使用时机： <ul><li>目标变量是 void 指针</li><li>tapset中函数的参数使用long类型，来代替有类型的指针</li></ul></li><li>e.g.<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@cast(task, “taskstruct”, “kernel&lt;linux/sched.h&gt;”)-&gt;tgid</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="defined-检查目标变量的可用性" tabindex="-1"><a class="header-anchor" href="#defined-检查目标变量的可用性"><span>@defined 检查目标变量的可用性</span></a></h4><ul><li>程序源码随着演进，可用的目标变量可能会发生变化</li><li>通过@defined 加三目运算，选择合适的可用变量</li><li>e.g.<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  write_access = (@defined($flags) ? $flags &amp; FAULT_FLAG_WRITE : $write)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="关联数组" tabindex="-1"><a class="header-anchor" href="#关联数组"><span>关联数组</span></a></h3><ul><li>作用：存储统计信息</li><li>关联数组是一组唯一的键，数组中的每个键都有一个与之关联的值。即dict字典。</li><li>最多可以指定九个索引表达式</li><li><span style="color:rgb(255, 41, 65);">注意：所有关联数组都必须声明为全局变量</span></li><li>e.g.<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>device[pid(),execname(),uid(),ppid(),&quot;W&quot;] = devname  # 对应C语言的数组，实际是获取 device[pid()][execname()][uid()][ppid()][&quot;W&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="遍历数组" tabindex="-1"><a class="header-anchor" href="#遍历数组"><span>遍历数组</span></a></h4><ul><li><p>定义：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>foreach (element in array_name)    # 注意：不需要花括号 {}</span></span>\n<span class="line"><span>  statement</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>正序、逆序遍历：<code>foreach (element in array_name+)</code>、<code>foreach (element in array_name-)</code></p></li><li><p>限定遍历的元素数量：<code>foreach (element in array_name+ limit 2)</code></p></li></ul><h4 id="删除数组元素" tabindex="-1"><a class="header-anchor" href="#删除数组元素"><span>删除数组元素</span></a></h4><p><code>delete array_name[element]</code>、<code>delete array_name</code></p><h4 id="数组统计聚合" tabindex="-1"><a class="header-anchor" href="#数组统计聚合"><span>数组统计聚合</span></a></h4><ul><li>添加统计聚合值 array_name[element] &lt;&lt;&lt; value：<code>reads[execname()] &lt;&lt;&lt; $count</code> （注意：与直接赋值的区别在于，&lt;&lt;&lt; 实际是将每次的结果单独存到关联数组对应的键中）</li><li>count：返回每个唯一键存储的值的数量 <code>@count(reads[execname()])</code></li><li>sum</li><li>min</li><li>max</li><li>avg</li></ul><h4 id="关联数组的可视化" tabindex="-1"><a class="header-anchor" href="#关联数组的可视化"><span>关联数组的可视化</span></a></h4><ul><li>线性直方图：<code>print( @hist_log(histogram) )</code></li><li>2为底对数直方图：<code>print( @hist_linear(reads, 0, 1024, 100) )</code></li></ul><h3 id="高频常用函数" tabindex="-1"><a class="header-anchor" href="#高频常用函数"><span>高频常用函数</span></a></h3><ul><li>printf() 格式化打印</li><li>println() 格式化打印带换行</li><li>tid() 当前线程ID</li><li>cpu() 当前CPU编号</li><li>ctime() 当前UNIX epoch秒数</li><li>pp() 当前探测点的描述字符串</li><li>thread_indent() 输出当前probe所处的可执行程序名称、线程id、函数执行的相对时间和执行的次数（通过空格的数量）信息</li><li>name 系统调用的名称字符串</li><li>execname() 当前运行的进程名称</li><li>probefunc() 探测点函数名称</li></ul><h2 id="六、stap-解读" tabindex="-1"><a class="header-anchor" href="#六、stap-解读"><span>六、stap++ 解读</span></a></h2><ul><li>stap++ 使用Perl对stap进行了更高层的统一封装，主要有如下优化： <ul><li>变量替换系统</li><li>自动处理动态库依赖</li><li>进程跟踪增强</li><li>模块化和tapset库支持</li><li>安全限制预设</li></ul></li><li>另外，该仓库针对nginx、lua、luajit 添加了对应的tapset库，方便进行测试</li><li><a href="https://github.com/openresty/stapxx" target="_blank" rel="noopener noreferrer">官方地址</a></li></ul><h3 id="stap-源码解读" tabindex="-1"><a class="header-anchor" href="#stap-源码解读"><span>stap++ 源码解读</span></a></h3><div class="language-perl line-numbers-mode" data-highlighter="shiki" data-ext="perl" data-title="perl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/usr/bin/env perl</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用环境中的perl解释器执行此脚本</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启用严格模式和警告，提高代码质量和安全性</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> strict;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> warnings;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 导入必要的Perl模块</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Getopt::Long </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">qw( GetOptions :config no_ignore_case)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 命令行参数解析，保持大小写敏感</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> File::Spec (); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 跨平台文件路径处理</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> File::Temp </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">qw( tempdir )</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 临时目录创建与管理</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FindBin (); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取脚本所在目录路径</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 前向声明shell参数引用函数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> quote_sh_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ($);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解析命令行参数</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GetOptions(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;D=s@&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,          \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 预处理器宏定义，如 -DMAXACTION=100000</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;c=s&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $shcmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行命令并在命令结束后退出</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;d=s@&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,          \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $d_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 加载指定对象的调试信息</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;arg=s%&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,        \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),        </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用户自定义参数，用于 $^arg_NAME 变量</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;args&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,          \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $print_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打印所有可用的 --arg 参数</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;dump-src&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,      \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $dump_src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出生成的脚本源码</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;sample-pid=i&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,  \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $sample_pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 采样进程以检查DSO对象</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;exec=s&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,        \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定要跟踪的可执行文件路径</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;help&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,          \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $help</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),        </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 显示帮助信息</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;master=i&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,      \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $master_pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定主进程ID，跟踪其所有子进程</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;x=i&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置目标进程ID</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;e=s&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 直接运行给定脚本</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;v&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,             \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $verbose</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 详细输出模式</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;skip-badvars&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,  \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $skip_badvars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 跳过无效变量</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           &quot;I=s@&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,          \\(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $Inc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定stap++库搜索目录</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">   or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> die</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> usage();  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 参数解析失败时显示用法并退出</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加默认的tapset库搜索路径：当前目录和脚本所在目录下的tapset子目录</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @$Inc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">FindBin::Bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tapset&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 操作系统兼容性检查</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ($^O </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">ne</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;linux&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Only linux is supported but I am on $^O.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 仅支持Linux系统</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 参数冲突检查：--args和--arg不能同时使用</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$print_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">%$args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;No --arg is allowed when --args is specified.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查SystemTap是否已安装并获取版本信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $ver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`stap -V 2&gt;&amp;1`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $ver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Systemtap not installed or its </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">stap</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> utility is not visible to the PATH environment: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解析SystemTap版本并检查最低版本要求</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$ver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/version</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $min_ver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = 2.3;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 最低要求版本2.3</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$min_ver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ERROR: at least systemtap </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">min_ver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is required but found </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ERROR: unknown version of systemtap:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ver</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果指定了--help参数，显示帮助信息并退出</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$help</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> usage();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理预处理器宏定义</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %set_D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $opt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@$D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 记录已设置的宏名称</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$opt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/^([_A-Z]+)=/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        $set_D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = 1;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置默认的性能安全参数（如果用户未指定）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$set_D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">MAXACTION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @$D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MAXACTION=100000&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 限制单个探针最大执行次数</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$set_D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">MAXMAPENTRIES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @$D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MAXMAPENTRIES=5000&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 限制哈希表最大条目数</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$set_D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">MAXBACKTRACE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @$D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MAXBACKTRACE=200&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 限制调用栈最大深度</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理输入源：文件或直接脚本</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 从命令行获取输入文件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">shift</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">        or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;No input file specified.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 读取源文件内容</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = read_src_file(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 使用-e参数直接提供的脚本内容</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-e&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 初始化全局数据结构</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">%StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 标准变量存储</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    %UsedLibs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 已使用的库文件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    %DSOs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,        </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 动态共享对象路径</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    %LibPaths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 库文件路径缓存</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    %UsedStdVars</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 已使用的标准变量跟踪</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 构建stap命令行参数数组</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加详细输出选项</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$verbose</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-v&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加调试对象选项</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$d_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $opt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@$d_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;-d&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$opt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加跳过无效变量选项</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $skip_badvars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--skip-badvars&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加预处理器宏定义</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $opt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@$D_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-D</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">opt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理通过 --exec 参数指定的可执行文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 检查可执行文件是否存在</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!-f </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exec_path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not found.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 设置标准变量 exec_path 并添加调试信息</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;-d&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 使用 ldd 命令获取可执行文件的动态库依赖</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    open</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ldd </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exec_path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">|&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">        or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;cannot run the command </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ldd </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exec_path</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 匹配动态库路径（如 /lib64/libc.so.6）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">m</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\/\\S</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">so(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)*)}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #warn &quot;Found DSO $path.\\n&quot;;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $DSOs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = 1;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 记录到动态库哈希表中</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 为所有发现的动态库添加调试信息选项</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">sort</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> keys</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %DSOs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;-d&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    close</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理通过 -x 参数指定的目标进程</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 检查是否与 --master 参数冲突</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $master_pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;-x &lt;pid&gt; and --master &lt;pid&gt; are exclusive.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 添加 stap 的 -x 选项</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-x&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 获取进程的可执行文件路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/proc/</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/exe&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!-f </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Nginx process </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is not running or &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                &quot;you do not have enough permissions.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 设置进程过滤条件和目标标识</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">pid_ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = gen_pid_test_condition();  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 生成 pid 过滤表达式</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 如果未指定可执行文件路径，则从进程信息中获取</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">readlink</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解析符号链接获取真实路径</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-d&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 处理进程加载的动态库</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        process_dso(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理通过 --master 参数指定的主进程（用于跟踪其所有子进程）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $master_pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#push @stap_opts, &quot;-x&quot;, $master_pid;  # 注释掉的代码，不直接跟踪主进程</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 获取主进程的可执行文件路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/proc/</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">master_pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/exe&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!-f </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Nginx process </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">master_pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is not running or &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;you do not have enough permissions.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 如果未指定可执行文件路径，则从主进程信息中获取</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        $exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">readlink</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-d&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 获取主进程的所有子进程</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @pids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = get_child_processes(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$master_pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@pids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == 0) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;No child processes found for </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">master_pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 生成包含所有子进程的过滤条件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">pid_ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = gen_pid_test_condition(\\</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@pids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">@</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将所有子进程ID作为空格分隔的字符串</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 使用第一个子进程来处理动态库依赖</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[0];</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    process_dso(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理通过 --sample-pid 参数指定的采样进程</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sample_pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    process_dso(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sample_pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 仅用于获取动态库信息，不跟踪该进程</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果未设置进程过滤条件但指定了可执行文件，则设置默认值</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">pid_ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">pid_ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;1&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 允许所有进程</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果未设置目标标识但指定了可执行文件，则设置默认值</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ANY&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 表示任意进程</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理用户自定义参数（--arg 选项）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$print_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">each</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %$args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #warn &quot;getting $k =&gt; $v&quot;;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;arg_</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将参数存储为 arg_NAME 格式的标准变量</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 初始化用于收集脚本中使用的参数信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %used_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理源代码并生成最终的 SystemTap 脚本</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $stap_src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = process_src(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$dump_src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $stap_src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果指定了 --dump-src 选项，则输出处理后的脚本内容</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出后退出程序</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理 --args 选项：显示脚本中使用的所有参数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$print_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">sort</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> keys</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %used_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$used_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取参数的默认值</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--arg </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=VALUE&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打印参数名称</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; (default: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果有默认值，显示默认值</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 没有默认值则只换行</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 显示参数后退出程序</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查未使用的参数并发出警告</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">keys</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %$args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$UsedStdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;arg_</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}) {  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查参数是否在脚本中被使用</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$args</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        warn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;WARNING: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">^arg_</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is defined by </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--arg </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">val</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">, &quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             .</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;but never used.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 警告用户定义了未使用的参数</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建临时目录用于存放处理后的库文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $tmpdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = tempdir(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;stapxx-XXXXXXXX&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">CLEANUP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 1);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建自动清理的临时目录</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$lib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">each</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %UsedLibs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $outfile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tmpdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">lib</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.stp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 为每个库创建临时文件</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    open</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">outfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">        or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Cannot open </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">outfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for writing: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $out</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将处理后的库内容写入临时文件</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    close</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将临时目录添加到 stap 的包含路径</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-I&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$tmpdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理 -c 选项（执行命令并在命令结束后退出）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $shcmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-c&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$shcmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 构建完整的 stap 命令</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $cmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;stap &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> . quote_sh_args(\\</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) . </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot; -&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用管道输入脚本内容</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">warn</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $cmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 调试用，输出完整命令</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">open</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;|</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cmd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 打开管道将脚本内容传递给 stap</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Cannot run stap: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $stap_src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将处理后的脚本内容写入 stap 的标准输入</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">close</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭管道，等待 stap 执行完成</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#=====================</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 定义一些辅助函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理用户自定义变量（$*var 格式）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> eval_usr_var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$usr_vars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 参数：文件名、变量表、变量名</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $usr_vars</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $usr_vars</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回变量值</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: line </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: Undefined user varaible </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 变量未定义则报错</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理标准内置变量（$^var 格式）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> eval_std_var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$trait_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$trait_val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 参数：文件名、变量名、特性名、特性值</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $UsedStdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = 1;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 标记变量已被使用</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 如果变量已定义，直接返回其值</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 处理变量特性（如 $^arg_foo:default(123)）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $trait_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #warn &quot;trait: $trait_name&quot;;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$trait_name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> eq</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;default&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理默认值特性</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$print_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/^arg_(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">                $used_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$trait_val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 记录参数默认值</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$trait_val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置变量值为默认值</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $trait_val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回默认值</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: line </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: unknown trait name: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">trait_name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 未知特性报错</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 处理 --args 模式下的变量</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$print_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/^arg_(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $used_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">undef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 记录参数但不设置默认值</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回空字符串</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 处理特殊变量</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> eq</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;exec_path&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可执行文件路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: line </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">^exec_path is used but neither -x &lt;pid&gt; &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;nor --exec &lt;path&gt; is specified.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 未指定路径则报错</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">elsif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/^arg_(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用户参数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: line </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">^</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is used but no --arg </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=VAL option is specified.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 未指定参数则报错</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">elsif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/^(lib</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)_path</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 库文件路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $prefix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $libpath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = find_dso_path(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$prefix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查找动态库路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$libpath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            warn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: line </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is not found, assuming it is statically linked.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">defined</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;No -x &lt;pid&gt; option is specified.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $LibPaths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$prefix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 假设静态链接，使用可执行文件路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $StdVars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">exec_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $libpath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回找到的库路径</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: line </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: Undefined built-in variable </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">^</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 未知内置变量报错</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查找动态共享对象(DSO)的路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> find_dso_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">shift</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取库名模式，通常是 libxxx 格式</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 检查缓存中是否已有该库的路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$LibPaths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果已缓存，直接返回</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 解析库名模式，提取实际库名（去掉lib前缀）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> !~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/^lib(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;bad pattern: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 库名必须以lib开头</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    $name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 提取lib后面的实际库名</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 在已发现的DSO列表中查找匹配的库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $found_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">sort</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> keys</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %DSOs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #warn &quot;checking $path against $pat&quot;;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 尝试精确匹配（如 libssl-1.0.0.so.10）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">m</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\b</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">lib</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\Q</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\E</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">[-.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">]*</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">so(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)*$}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $LibPaths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 缓存结果</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $found_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            warn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Found exact match for </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出找到的精确匹配</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            last</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 找到精确匹配后立即返回</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\t}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 尝试模糊匹配（处理库名可能有变体的情况）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">m</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\b</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(?:lib)?</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\Q</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\E</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">[^/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">]*?</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">so(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)*$}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$found_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                warn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Ignored ambiguous library </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pat</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 忽略模糊匹配</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $LibPaths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 缓存结果</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $found_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 记录找到的路径</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $found_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回找到的路径，如果未找到则为undef</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 读取源文件内容</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read_src_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">shift</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取输入文件路径</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    open</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$infile</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">        or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Cannot open </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">infile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for reading: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开文件失败则报错</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; };  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 一次性读取整个文件内容</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    close</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭文件句柄</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回文件内容</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理@use指令，导入tapset库文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> use_libs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$libs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 参数：当前文件名、库列表字符串</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #warn &quot;libs: $libs&quot;;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @libs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /\\</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">*,\\</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">*/, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$libs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 按逗号分隔库名列表</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $lib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@libs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #warn &quot;processing $lib...&quot;;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 将点分隔的库名转换为路径（如 ngx.time 变为 ngx/time.sxx）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /\\./, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$lib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) . </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;.sxx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #warn $path;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 在所有包含路径中查找库文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $dir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@$Inc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $abspath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = File::Spec</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">catfile(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$dir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 构建绝对路径</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            warn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Testing </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">abspath</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            warn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;exist: &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (-f </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$abspath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ? 1 : 0;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (-f </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$abspath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果文件存在</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = read_src_file(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$abspath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 读取库文件内容</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">                $UsedLibs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$lib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = process_src(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$abspath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理库文件内容并缓存</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> next_lib;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 跳转到下一个库的处理</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: line </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: cannot find </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">use library </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">lib</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 找不到库文件则报错</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">next_lib:  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理下一个库的标签</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># @use指令本身不产生输出</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理stap源代码，替换变量和指令</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> process_src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 参数：文件名、源代码内容</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %usr_vars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 存储用户自定义变量</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @bits</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 存储处理后的代码片段</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 定义库名模式（支持点分隔的库名，如 ngx.time）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $libname_pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">qr</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)*)/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 处理输入文件</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    open</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&lt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, \\</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$src</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> die</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 从字符串打开文件句柄</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 替换脚本首行的 shebang</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == 1 &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/^</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\#</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">!/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;#!/usr/bin/env stap</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 确保使用 stap 解释器</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 替换参数变量（$^arg_xxx 格式）</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$\\^</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(arg_</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*:(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(.*?)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">)?}{eval_std_var(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$2</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$3</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">)}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">eg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 替换 @pfunc 函数调用（简化函数引用）</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\@</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">pfunc</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">}{process(&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">^exec_path&quot;).function(&quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;)}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 替换标准变量（$^xxx 格式）</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$\\^</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+|lib[-.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">]+_path)(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*:(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(.*?)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">)?}{eval_std_var(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$2</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$3</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">)}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">eg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 处理用户变量赋值（$*xxx := @cast(...) 格式）</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$\\*</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*:=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\@</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(?:cast|var)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">.*?</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">)?)}{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$usr_vars</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">} = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$2</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">; &quot;&quot;}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">eg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 替换用户变量引用（$*xxx 格式）</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$\\*</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)}{eval_usr_var(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\%</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">usr_vars, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">)}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">eg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 处理库导入指令（@use xxx 格式）</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\@</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">use</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+($libname_pat(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">*$libname_pat)*)}{use_libs(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">)}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">eg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">continue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @bits</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将处理后的行添加到结果数组</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    close</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭文件句柄</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> join</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@bits</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 合并所有行并返回</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 生成帮助信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> usage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;&lt;&#39;_EOC_&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Usage:</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    stap++ [optoins] [infile]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Options:</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    --arg NM=VAL    Specify extra user arguments (for $^arg_NM).</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    --args          Print all available arguments for --arg.</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    -c CMD     start the probes, run CMD, and exit when it finishes</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    -d PATH         Load debug info for the specified objects</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    -D NM=VAL       Emit macro definition into generated C code.</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    -e SCRIPT       Run given script.</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    --exec PATH     Specify the executable file path to be traced.</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    --help          Print this help.</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    -I PATH         Specify the stap++ tapset library search directory.</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    --master PID    Specify the master pid whose child processes are traced.</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    --sample-pid PID  Sample process to inspect DSO objects to load via -d</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    -v              Be verbose.</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    -x PID          Sets target() to PID (also for $^exec_path and $^libxxx_path).</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Examples:</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    stap++ -x 12345 -e &#39;probe begin { println(&quot;hello&quot;) exit() }&#39;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    stap++ -x 12345 infile.ss</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">_EOC_</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取指定进程的所有子进程</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> get_child_processes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">shift</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取父进程ID</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 获取所有进程的状态文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">glob</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/proc/[0-9]*/stat&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @children</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 存储子进程ID</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 遍历所有进程</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #print &quot;file: $file\\n&quot;;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 跳过进程自身</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">m</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{^/proc/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pid</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 读取进程状态信息</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        open</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$file</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打开失败则跳过</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        close</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 解析进程ID和父进程ID</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/^(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+ (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$child</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$parent</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> eq</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果父进程ID匹配</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @children</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$child</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加到子进程列表</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 按数字顺序排序子进程ID</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    @children</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;=&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@children</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @children</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回子进程ID列表</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 生成进程ID过滤条件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> gen_pid_test_condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">shift</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取进程ID列表</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 如果未提供进程ID列表，则使用 target() 函数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;pid() == target()&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 默认条件：当前进程ID等于目标进程ID</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 为每个进程ID生成条件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@$pids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;pid() == </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加进程ID相等条件</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 使用逻辑或连接所有条件，并用括号包围</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;(&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> . </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot; || &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) . </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;)&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理进程的动态共享对象</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> process_dso</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">shift</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取进程ID</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 打开进程的内存映射文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $maps_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/proc/</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/maps&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    open</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$maps_file</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">        or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> die</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Cannot open </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maps_file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for reading: </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 解析内存映射，查找动态库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">m</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">so(?:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.\\d</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">+)*$}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 匹配以 .so 结尾的路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取匹配的路径</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            $DSOs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} = 1;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 记录到动态库哈希表</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #warn &quot;seeing $path&quot;;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 为所有发现的动态库添加调试信息选项</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">sort</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> keys</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %DSOs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        push</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> @stap_opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;-d&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理Shell命令参数的引用，确保特殊字符被正确转义</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> quote_sh_args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ($) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取参数数组引用</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> my</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">@$args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 检查参数是否只包含常见的Shell安全字符</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">       if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">m</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">{^[- &quot;&amp;%;,|?*.+=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\w</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">:/()]*$}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 如果包含空格或特殊字符，用单引号包围</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">          if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/[ &quot;&amp;%;,|?*()]/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">             $arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">arg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">          next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 处理下一个参数</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 处理包含更复杂字符的参数，使用$&#39;...&#39;格式（ANSI-C引用）</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">       $arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\\\\\</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转义反斜杠</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">       $arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/&#39;/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转义单引号</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">       $arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">n/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转义换行符</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">       $arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">r/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转义回车符</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">       $arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =~ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">s</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\t</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">t/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转义制表符</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">       $arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">arg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用ANSI-C引用格式</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">@</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$args</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回空格连接的参数字符串</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七、openresty-systemtap-toolkit-解读" tabindex="-1"><a class="header-anchor" href="#七、openresty-systemtap-toolkit-解读"><span>七、openresty-systemtap-toolkit 解读</span></a></h2><ul><li>openresty-systemtap-toolkit 中的脚本也使用Perl对stap进行了更高层的封装。它与stap++的主要区别在于，这个仓库里面的每个脚本都针对当前stap脚本做了具体的处理，而stap++是对stap脚本的笼统的抽象处理。这样对应的执行方式就发生了变化： <ul><li>stap++ ：stap++ script.stp -x PID</li><li>tookit ：perl perl-script -x PID</li></ul></li><li>另外，该仓库针对nginx、lua、luajit 添加了对应的tapset库，方便进行测试</li><li><a href="https://github.com/openresty/openresty-systemtap-toolkit" target="_blank" rel="noopener noreferrer">官方地址</a></li></ul><h2 id="八、stap-、toolkit核心脚本" tabindex="-1"><a class="header-anchor" href="#八、stap-、toolkit核心脚本"><span>八、stap++、toolkit核心脚本</span></a></h2><h3 id="stap-核心脚本说明" tabindex="-1"><a class="header-anchor" href="#stap-核心脚本说明"><span>stap++核心脚本说明</span></a></h3><p><a href="https://github.com/openresty/stapxx/blob/master/samples/lj-lua-stacks.sxx" target="_blank" rel="noopener noreferrer">lj-lua-stacks.sxx：</a> CPU统计工具，获取lua代码堆栈统计</p><p><a href="https://github.com/openresty/stapxx/blob/master/samples/sample-bt-leaks.sxx" target="_blank" rel="noopener noreferrer">sample-bt-leaks.sxx：</a> 内存工具统计，对glibc内置函数（malloc、calloc、realloc）进行的内存分配采集回溯信息，查看未被释放的内存（一般需要两次采集来进行差异分析）</p><p><a href="https://github.com/openresty/stapxx/blob/master/samples/lj-gc-objs.sxx" target="_blank" rel="noopener noreferrer">lj-gc-objs.sxx：</a> 内存工具统计，lua类型的内存分配</p><p><a href="https://github.com/openresty/stapxx/blob/master/samples/lj-str-tab.sxx" target="_blank" rel="noopener noreferrer">lj-str-tab.sxx：</a> 内存工具统计，查看lua全局变量</p><p><a href="https://github.com/openresty/stapxx/blob/master/samples/ngx-lua-count-timers.sxx" target="_blank" rel="noopener noreferrer">ngx-lua-count-timers.sxx：</a> 统计timer数量</p><p><a href="https://github.com/openresty/stapxx/blob/master/samples/sample-bt.sxx" target="_blank" rel="noopener noreferrer">sample-bt.sxx：</a> CPU统计工具，获取任意进程（nginx）进行用户态或者内核态采样。输出是汇总后的调用栈（按照总数）。同toolkit中的sample-bt功能一样，但是toolkit的可以自动获取并添加其他so文件信息到stap命令行。</p><p><a href="https://github.com/openresty/stapxx/blob/master/samples/ngx-upstream-err-log.sxx" target="_blank" rel="noopener noreferrer">ngx-upstream-err-log.sxx：</a> 排查<code>upstream prematurely closed connection while</code>等upstream问题</p><h3 id="toolkit核心脚本说明" tabindex="-1"><a class="header-anchor" href="#toolkit核心脚本说明"><span>toolkit核心脚本说明</span></a></h3><p><a href="https://github.com/openresty/openresty-systemtap-toolkit/blob/master/sample-bt" target="_blank" rel="noopener noreferrer">sample-bt：</a> CPU统计工具，获取任意进程（nginx）进行用户态或者内核态采样。输出是汇总后的调用栈（按照总数）</p><p><a href="https://github.com/openresty/openresty-systemtap-toolkit/blob/master/sample-bt-off-cpu" target="_blank" rel="noopener noreferrer">sample-bt-off-cpu：</a> CPU统计工具，对进程级别的off-cpu的采样统计</p><p><a href="https://github.com/openresty/openresty-systemtap-toolkit/blob/master/fix-lua-bt" target="_blank" rel="noopener noreferrer">fix-lua-bt：</a> 对采样结果进行优化，展示更多信息。将<code>lj-lua-stacks.sxx</code>的结果根据 lua文件+行号 转换为对应函数</p><p><a href="https://github.com/openresty/openresty-systemtap-toolkit/blob/master/ngx-phase-handlers" target="_blank" rel="noopener noreferrer">ngx-phase-handlers：</a> 按照真实执行顺序，打印出实际注册的phase和对应的handler。可以用来解决配置handler顺序相关问题。</p><h3 id="辅助工具" tabindex="-1"><a class="header-anchor" href="#辅助工具"><span>辅助工具</span></a></h3><p><a href="https://github.com/openresty/openresty-systemtap-toolkit/blob/master/check-debug-info" target="_blank" rel="noopener noreferrer">check-debug-info：</a> 检查当前进程中使用的so文件，哪些没有debuginfo\\dwarf信息</p><p><a href="https://github.com/openresty/openresty-systemtap-toolkit/blob/master/ngx-lua-bt" target="_blank" rel="noopener noreferrer">ngx-lua-bt：</a> 获取Lua的当前调用栈（<strong>在luajit环境没跑通</strong>，代码有大量问题，可以用lj-lua-stacks.sxx替代）</p>',89)]))}]]),k=JSON.parse('{"path":"/%E5%B7%A5%E5%85%B7%E6%AD%A6%E5%99%A8%E5%BA%93/%E5%8A%A8%E6%80%81%E8%BF%BD%E8%B8%AA%E6%8A%80%E6%9C%AFTracing/systemtap%E7%AC%94%E8%AE%B0.html","title":"systemtap笔记","lang":"zh-CN","frontmatter":{"title":"systemtap笔记","date":"2025-04-17T18:27:34.000Z","author":"Navyum","tags":["SystemTap","性能分析"],"categories":["工具","性能分析","Systemtap"],"description":"笔记 SystemTap的语法基础跟C语言类似，这里只记录存在差异的点和systemtap特有的语法 SystemTap的语言是强类型、无声明的过程式语言，受dtrace和awk的启发 一、命令行参数 以下列举几个常用的参数 -x PID -x用于传递PID参数给systemtap脚本，程序内部可以通过内置函数target()获取到 e.g.：targ...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E5%B7%A5%E5%85%B7%E6%AD%A6%E5%99%A8%E5%BA%93/%E5%8A%A8%E6%80%81%E8%BF%BD%E8%B8%AA%E6%8A%80%E6%9C%AFTracing/systemtap%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"systemtap笔记"}],["meta",{"property":"og:description","content":"笔记 SystemTap的语法基础跟C语言类似，这里只记录存在差异的点和systemtap特有的语法 SystemTap的语言是强类型、无声明的过程式语言，受dtrace和awk的启发 一、命令行参数 以下列举几个常用的参数 -x PID -x用于传递PID参数给systemtap脚本，程序内部可以通过内置函数target()获取到 e.g.：targ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-15T08:56:54.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"SystemTap"}],["meta",{"property":"article:tag","content":"性能分析"}],["meta",{"property":"article:published_time","content":"2025-04-17T18:27:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-15T08:56:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"systemtap笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-17T18:27:34.000Z\\",\\"dateModified\\":\\"2025-10-15T08:56:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1760518614000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":1,"url":"https://github.com/haijun_yang"},{"name":"navyum","username":"navyum","email":"navyum","commits":1,"url":"https://github.com/navyum"}]},"readingTime":{"minutes":21.15,"words":6345},"filePathRelative":"工具武器库/动态追踪技术Tracing/systemtap笔记.md","localizedDate":"2025年4月17日","excerpt":"<h2>笔记</h2>\\n<ul>\\n<li>SystemTap的语法基础跟C语言类似，这里只记录存在差异的点和systemtap特有的语法</li>\\n<li>SystemTap的语言是<code>强类型、无声明的过程式语言</code>，受dtrace和awk的启发</li>\\n</ul>\\n<hr>\\n<h2>一、命令行参数</h2>\\n<p>以下列举几个常用的参数</p>\\n<h3>-x PID</h3>\\n<p>-x用于传递PID参数给systemtap脚本，程序内部可以通过内置函数<code>target()</code>获取到\\ne.g.：<code>target() == pid()</code></p>","autoDesc":true}')},36995:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,n]of i)a[s]=n;return a}}}]);