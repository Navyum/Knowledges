"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[66990],{36995:(e,i)=>{i.A=(e,i)=>{const a=e.__vccOpts||e;for(const[e,t]of i)a[e]=t;return a}},40886:(e,i,a)=>{a.r(i),a.d(i,{comp:()=>s,data:()=>d});var t=a(6254);const n={},s=(0,a(36995).A)(n,[["render",function(e,i){return(0,t.uX)(),(0,t.CE)("div",null,i[0]||(i[0]=[(0,t.Fv)('<h2 id="本地磁盘中文件发送到网络中" tabindex="-1"><a class="header-anchor" href="#本地磁盘中文件发送到网络中"><span>本地磁盘中文件发送到网络中：</span></a></h2><h3 id="_1-直接-io-技术" tabindex="-1"><a class="header-anchor" href="#_1-直接-io-技术"><span>1. 直接 IO 技术</span></a></h3><figure><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/92fdae49b711f79a0d55ddc156359115.png" alt="Img" tabindex="0" loading="lazy"><figcaption>Img</figcaption></figure><ul><li><p><code>内核缓冲区</code>又叫做Linux系统的<code>Page Cahe</code>。 为了加快磁盘的IO，Linux系统会把磁盘上的数据以 Page为单位缓存在操作系统的内存里，这里的Page是 Linux 系统定义的一个逻辑概念，一个Page一般为4K</p></li><li><p>整个过程有四次数据拷贝，读进来两次，写回去又两次：</p><ul><li>磁盘 --&gt; 内核缓冲区 --&gt; 用户态程序</li><li>用户态程序 --&gt; Socket缓冲区--&gt; 网络</li></ul></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>相关API：</span></span>\n<span class="line"><span> ssize_t read(int filedes, void *buf, size_t nbytes);</span></span>\n<span class="line"><span> ssize_t write(int filedes, void *buf, size_t nbytes);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-内存映射文件技术" tabindex="-1"><a class="header-anchor" href="#_2-内存映射文件技术"><span>2. 内存映射文件技术</span></a></h3><figure><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/dd04c853e0c9e34da3e806fe556b7de1.png" alt="Img" tabindex="0" loading="lazy"><figcaption>Img</figcaption></figure><ul><li>整个过程有三次数据拷贝，不再经过应用程序内存： <ul><li>磁盘 --&gt; 内核缓冲区 --&gt; Socket 缓冲区</li><li>Socket缓冲区 --&gt; 网络</li></ul></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>相关API：</span></span>\n<span class="line"><span>void *mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-零拷贝技术" tabindex="-1"><a class="header-anchor" href="#_3-零拷贝技术"><span>3. 零拷贝技术</span></a></h3><figure><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/eced5c9def9074b0823674bb5a540a22.png" alt="Img" tabindex="0" loading="lazy"><figcaption>Img</figcaption></figure><ul><li><p>内核缓冲区到 Socket 缓冲区之间并没有做数据的拷贝，只是一个地址的映射。底层的网卡驱动程序要读取数据并发送到网络上的时候，看似读取的是 Socket 的缓冲区中的数据，其实直接读的是内核缓冲区中的数据。</p></li><li><p>零拷贝中所谓的“零”指的是<code>内存中数据</code>拷贝的次数为 0 (磁盘的数据读取到内存还是存在的)</p></li><li><p>整个过程有0次数据拷贝：</p><ul><li>磁盘 --&gt; 内核缓冲区</li><li>Socket缓冲区 --&gt; 网络</li></ul></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>相关API：</span></span>\n<span class="line"><span>ssize_t sendfile(int out_fd, int in_fd, off_t *offset, size_t count);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>',13)]))}]]),d=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/08.%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6IO%E4%BC%98%E5%8C%96.html","title":"10.网络文件IO优化","lang":"zh-CN","frontmatter":{"title":"10.网络文件IO优化","date":"2024-04-16T19:31:47.000Z","author":"Navyum","tags":["TCP"],"categories":["网络"],"article":true,"index":true,"headerDepth":2,"sticky":false,"star":true,"icon":"bxs:hot","description":"本地磁盘中文件发送到网络中： 1. 直接 IO 技术 ImgImg 内核缓冲区又叫做Linux系统的Page Cahe。 为了加快磁盘的IO，Linux系统会把磁盘上的数据以 Page为单位缓存在操作系统的内存里，这里的Page是 Linux 系统定义的一个逻辑概念，一个Page一般为4K 整个过程有四次数据拷贝，读进来两次，写回去又两次： 磁盘 --...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/08.%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6IO%E4%BC%98%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"10.网络文件IO优化"}],["meta",{"property":"og:description","content":"本地磁盘中文件发送到网络中： 1. 直接 IO 技术 ImgImg 内核缓冲区又叫做Linux系统的Page Cahe。 为了加快磁盘的IO，Linux系统会把磁盘上的数据以 Page为单位缓存在操作系统的内存里，这里的Page是 Linux 系统定义的一个逻辑概念，一个Page一般为4K 整个过程有四次数据拷贝，读进来两次，写回去又两次： 磁盘 --..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/92fdae49b711f79a0d55ddc156359115.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-23T09:35:21.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"TCP"}],["meta",{"property":"article:published_time","content":"2024-04-16T19:31:47.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-23T09:35:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10.网络文件IO优化\\",\\"image\\":[\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/92fdae49b711f79a0d55ddc156359115.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/dd04c853e0c9e34da3e806fe556b7de1.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/eced5c9def9074b0823674bb5a540a22.png\\"],\\"datePublished\\":\\"2024-04-16T19:31:47.000Z\\",\\"dateModified\\":\\"2025-06-23T09:35:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750671321000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":3,"url":"https://github.com/haijun_yang"}]},"readingTime":{"minutes":1.44,"words":431},"filePathRelative":"计算机网络/08.网络文件IO优化.md","localizedDate":"2024年4月16日","excerpt":"<h2>本地磁盘中文件发送到网络中：</h2>\\n<h3>1. 直接 IO 技术</h3>\\n<figure><img src=\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/92fdae49b711f79a0d55ddc156359115.png\\" alt=\\"Img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>Img</figcaption></figure>\\n<ul>\\n<li>\\n<p><code>内核缓冲区</code>又叫做Linux系统的<code>Page Cahe</code>。\\n为了加快磁盘的IO，Linux系统会把磁盘上的数据以 Page为单位缓存在操作系统的内存里，这里的Page是 Linux 系统定义的一个逻辑概念，一个Page一般为4K</p>\\n</li>\\n<li>\\n<p>整个过程有四次数据拷贝，读进来两次，写回去又两次：</p>\\n<ul>\\n<li>磁盘 --&gt; 内核缓冲区 --&gt; 用户态程序</li>\\n<li>用户态程序 --&gt; Socket缓冲区--&gt; 网络</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}')}}]);