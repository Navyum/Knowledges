"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[11295],{36995:(l,t)=>{t.A=(l,t)=>{const e=l.__vccOpts||l;for(const[l,i]of t)e[l]=i;return e}},38021:(l,t,e)=>{e.r(t),e.d(t,{comp:()=>a,data:()=>r});var i=e(6254);const n={},a=(0,e(36995).A)(n,[["render",function(l,t){return(0,i.uX)(),(0,i.CE)("div",null,t[0]||(t[0]=[(0,i.Fv)('<h2 id="目标、路径" tabindex="-1"><a class="header-anchor" href="#目标、路径"><span>目标、路径</span></a></h2><ol><li>该类软件的目标、职责 <ul><li>为了解决什么问题？</li></ul></li><li>工作原理： <ul><li>实现上如何解决这些问题？</li></ul></li><li>最佳使用场景： <ul><li>哪些问题得到很好的解决？</li></ul></li><li>架构思想： <ul><li>常见的工程问题是如何解决的？ <ul><li>高可用、扩展性、高性能</li><li>数据一致性</li><li>事务支持</li><li>数据丢失、持久化策略</li></ul></li><li>系统、组件、组件之间的关系，如何协作的？</li></ul></li><li>同类产品之间的架构差异、原因、设计上的取舍： <ul><li>理解工程设计如何服务于产品？</li></ul></li><li>设计上的大同之处，提炼核心？ <ul><li>掌握同类产品的设计核心、融汇贯通</li></ul></li></ol>',2)]))}]]),r=JSON.parse('{"path":"/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/0.%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84.html","title":"0.学习路径","lang":"zh-CN","frontmatter":{"title":"0.学习路径","author":"navyum","date":"2025-06-15T00:00:00.000Z","order":-1,"article":true,"headerDepth":2,"sticky":true,"star":true,"category":["使用指南"],"tag":["页面配置","使用指南"],"description":"目标、路径 该类软件的目标、职责 为了解决什么问题？ 工作原理： 实现上如何解决这些问题？ 最佳使用场景： 哪些问题得到很好的解决？ 架构思想： 常见的工程问题是如何解决的？ 高可用、扩展性、高性能 数据一致性 事务支持 数据丢失、持久化策略 系统、组件、组件之间的关系，如何协作的？ 同类产品之间的架构差异、原因、设计上的取舍： 理解工程设计如何服务于...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/0.%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"0.学习路径"}],["meta",{"property":"og:description","content":"目标、路径 该类软件的目标、职责 为了解决什么问题？ 工作原理： 实现上如何解决这些问题？ 最佳使用场景： 哪些问题得到很好的解决？ 架构思想： 常见的工程问题是如何解决的？ 高可用、扩展性、高性能 数据一致性 事务支持 数据丢失、持久化策略 系统、组件、组件之间的关系，如何协作的？ 同类产品之间的架构差异、原因、设计上的取舍： 理解工程设计如何服务于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-15T10:30:52.000Z"}],["meta",{"property":"article:author","content":"navyum"}],["meta",{"property":"article:tag","content":"页面配置"}],["meta",{"property":"article:tag","content":"使用指南"}],["meta",{"property":"article:published_time","content":"2025-06-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-15T10:30:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"0.学习路径\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-15T10:30:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1749983452000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"}]},"readingTime":{"minutes":0.73,"words":218},"filePathRelative":"常用软件/0.学习路径.md","localizedDate":"2025年6月15日","excerpt":"<h2>目标、路径</h2>\\n<ol>\\n<li>该类软件的目标、职责\\n<ul>\\n<li>为了解决什么问题？</li>\\n</ul>\\n</li>\\n<li>工作原理：\\n<ul>\\n<li>实现上如何解决这些问题？</li>\\n</ul>\\n</li>\\n<li>最佳使用场景：\\n<ul>\\n<li>哪些问题得到很好的解决？</li>\\n</ul>\\n</li>\\n<li>架构思想：\\n<ul>\\n<li>常见的工程问题是如何解决的？\\n<ul>\\n<li>高可用、扩展性、高性能</li>\\n<li>数据一致性</li>\\n<li>事务支持</li>\\n<li>数据丢失、持久化策略</li>\\n</ul>\\n</li>\\n<li>系统、组件、组件之间的关系，如何协作的？</li>\\n</ul>\\n</li>\\n<li>同类产品之间的架构差异、原因、设计上的取舍：\\n<ul>\\n<li>理解工程设计如何服务于产品？</li>\\n</ul>\\n</li>\\n<li>设计上的大同之处，提炼核心？\\n<ul>\\n<li>掌握同类产品的设计核心、融汇贯通</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}')}}]);