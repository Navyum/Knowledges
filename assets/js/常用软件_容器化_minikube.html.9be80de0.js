"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[50312],{36995:(i,e)=>{e.A=(i,e)=>{const s=i.__vccOpts||i;for(const[i,n]of e)s[i]=n;return s}},58435:(i,e,s)=>{s.r(e),s.d(e,{comp:()=>l,data:()=>t});var n=s(6254);const a={},l=(0,s(36995).A)(a,[["render",function(i,e){return(0,n.uX)(),(0,n.CE)("div",null,e[0]||(e[0]=[(0,n.Fv)('<h1 id="minikube安装踩坑笔记" tabindex="-1"><a class="header-anchor" href="#minikube安装踩坑笔记"><span>minikube安装踩坑笔记</span></a></h1><ul><li><strong>步骤一</strong>：minikube 执行文件下载（linux x86-64为例子）： <ul><li>官方地址：(https://minikube.sigs.k8s.io/docs/start/?arch=%2Flinux%2Fx86-64%2Fstable%2Fbinary+download)´</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span></span>\n<span class="line"><span>    sudo install minikube-linux-amd64 /usr/local/bin/minikube &amp;&amp; rm minikube-linux-amd64</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>步骤二</strong> minikube 运行： <ul><li>官方命令： <code>minikube start</code></li><li>我们需要做如下改动：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>minikube start --vm-driver=docker --base-image=&quot;anjone/kicbase&quot; --force --kubernetes-version=1.23.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>问题一</strong>：因为政策等原因，dokcer-hub无法拉取到base镜像 <ul><li>错误信息（阻塞在镜像下载）：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Pending：   Pulling base image v0.0.44 ...</span></span>\n<span class="line"><span>            &gt; index.docker.io/kicbase/sta...:  0 B</span></span>\n<span class="line"><span>            E0811 15:29:59.503923   16810 cache.go:189] Error downloading kic artifacts:  failed to download kic base image or any fallback image</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>解决方案1： <ul><li>使用命令行参数修改镜像源为阿里云</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> minikube start --image-mirror-country=&#39;cn&#39; --image-repository=&#39;registry.cn-hangzhou.aliyuncs.com/google_containers</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>测试结果：❌未通过，猜测大部分云厂商的源站失效</li></ul></li><li>解决方案2： <ul><li>修改镜像源，并将 base-image <code>anjone/kicbase</code> 拉到本地</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    $ sudo vi /etc/docker/daemon.json</span></span>\n<span class="line"><span>    $ 修改registry-mirrors：</span></span>\n<span class="line"><span>    {</span></span>\n<span class="line"><span>        &quot;registry-mirrors&quot;: [</span></span>\n<span class="line"><span>            &quot;https://hub.uuuadc.top&quot;,</span></span>\n<span class="line"><span>            &quot;https://dockerpull.com&quot;,</span></span>\n<span class="line"><span>            &quot;https://docker.1panel.live&quot;</span></span>\n<span class="line"><span>        ]</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>    $ sudo systemctl restart docker</span></span>\n<span class="line"><span>    $ docker pull anjone/kicbase</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试结果：✅ 通过</li><li>源站来源：https://github.com/Navyum/CF-Workers-docker.io <ul><li>自己搭建</li><li>使用别人搭建好的</li></ul></li></ul></li></ul></li><li><strong>问题二</strong>：默认会使用最新版kubernetes（测试时为v1.30.0），不支持docker <ul><li>错误信息（提示需要使用cri-docker）：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>❌  Exiting due to RT_DOCKER_MISSING_CRI_DOCKER_NONE: sudo systemctl enable cri-docker.socket: Process exited with status 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>解决方案1： <ul><li>使用ci-dockerd<a href="https://github.com/Mirantis/cri-dockerd/releases" target="_blank" rel="noopener noreferrer">github地址</a></li><li>测试结果：未测试</li></ul></li><li>解决方案2: <ul><li>使用支持docker的低版本kubernetes，例如1.23.0</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> --kubernetes-version=1.23.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>测试结果：✅ 通过</li></ul></li><li>--vm-driver 参数说明： <ul><li>指定为docker，即通过docker运行minikube环境。我是在EC2环境中使用</li></ul></li><li>--force 参数说明： <ul><li>使用root运行，不推荐</li></ul></li></ul></li><li>运行成功截图： *</li></ul></li><li><strong>步骤三</strong> 检查minikube 运行状态：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ kubectl get nodes</span></span>\n<span class="line"><span>    NAME       STATUS   ROLES                  AGE   VERSION</span></span>\n<span class="line"><span>    minikube   Ready    control-plane,master   16h   v1.23.0</span></span>\n<span class="line"><span>$ minikube status</span></span>\n<span class="line"><span>    minikube</span></span>\n<span class="line"><span>    type: Control Plane</span></span>\n<span class="line"><span>    host: Running</span></span>\n<span class="line"><span>    kubelet: Running</span></span>\n<span class="line"><span>    apiserver: Running</span></span>\n<span class="line"><span>    kubeconfig: Configured</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>步骤四</strong> 安装kubectl、kubeadm、kubelet： <ul><li>解决方案1： <ul><li>使用官方地址下载可执行文件： <ul><li>本例子使用的kubenetes版本为1.23.0，需要下载对应版本的kubectl</li><li>KUBERNETES_VERSION 替换为你需要的版本，本例子为1.23.0</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ curl -LO https://dl.k8s.io/release/KUBERNETES_VERSION/bin/linux/amd64/kubectl</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>测试结果：❌ 未通过，速度太慢</li></ul></li><li>解决方案2： <ul><li><p>使用yum源下载指定版本（centos）</p><ul><li>添加k8s仓库源</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &lt;&lt; EOF &gt; /etc/yum.repos.d/kubernetes.repo </span></span>\n<span class="line"><span>    [kubernetes]</span></span>\n<span class="line"><span>    name=Kubernetes</span></span>\n<span class="line"><span>    baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span>\n<span class="line"><span>    enabled=1</span></span>\n<span class="line"><span>    gpgcheck=1</span></span>\n<span class="line"><span>    repo_gpgcheck=1</span></span>\n<span class="line"><span>    gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span>\n<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>下载1.23.0 版本kubectl</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ yum install -y kubectl-1.23.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>测试结果：✅通过</p></li></ul></li></ul></li><li><strong>步骤四</strong> 创建Deployment： <ul><li>官方推荐的yaml，拉取image太慢，使用阿里云的测试即可</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ kubectl create deployment hello-minikube --image=registry.aliyuncs.com/google_containers/echoserver:1.10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>步骤五</strong> expose到外网： <ul><li>如果使用的是阿里云、腾讯云主机，需要在控制台开启对应端口号，否则可能无法访问，本例子需要手动开启Port 8080</li><li>expose 到8080端口</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ kubectl expose deployment hello-minikube --type=NodePort --port=8080</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看服务：</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ kubectl get pod -o wide</span></span>\n<span class="line"><span>    NAME                              READY   STATUS    RESTARTS   AGE     IP           NODE       NOMINATED NODE   READINESS GATES</span></span>\n<span class="line"><span>    hello-minikube-6899fcbcf5-qdb2p   1/1     Running   0          2m28s   172.17.0.3   minikube   &lt;none&gt;           &lt;none&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>$ kubectl get svc -o wide</span></span>\n<span class="line"><span>    NAME             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE     SELECTOR</span></span>\n<span class="line"><span>    hello-minikube   NodePort    10.109.145.31   &lt;none&gt;        8080:32484/TCP   100s    app=hello-minikube</span></span>\n<span class="line"><span>    kubernetes       ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP          2m38s   &lt;none&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>',2)]))}]]),t=JSON.parse('{"path":"/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/%E5%AE%B9%E5%99%A8%E5%8C%96/minikube.html","title":"minikube","lang":"zh-CN","frontmatter":{"title":"minikube","date":"2025-06-17T15:19:11.000Z","author":"Navyum","tags":["minikube"],"categories":["踩坑笔记","容器技术"],"article":true,"index":true,"headerDepth":2,"sticky":false,"star":true,"icon":"lineicons:kubernetes","description":"minikube安装踩坑笔记 步骤一：minikube 执行文件下载（linux x86-64为例子）： 官方地址：(https://minikube.sigs.k8s.io/docs/start/?arch=%2Flinux%2Fx86-64%2Fstable%2Fbinary+download)´ 步骤二 minikube 运行： 官方命令： mi...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/%E5%AE%B9%E5%99%A8%E5%8C%96/minikube.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"minikube"}],["meta",{"property":"og:description","content":"minikube安装踩坑笔记 步骤一：minikube 执行文件下载（linux x86-64为例子）： 官方地址：(https://minikube.sigs.k8s.io/docs/start/?arch=%2Flinux%2Fx86-64%2Fstable%2Fbinary+download)´ 步骤二 minikube 运行： 官方命令： mi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-24T03:13:58.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"minikube"}],["meta",{"property":"article:published_time","content":"2025-06-17T15:19:11.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-24T03:13:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"minikube\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-17T15:19:11.000Z\\",\\"dateModified\\":\\"2025-06-24T03:13:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750734838000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":2,"url":"https://github.com/haijun_yang"}]},"readingTime":{"minutes":2.63,"words":790},"filePathRelative":"常用软件/容器化/minikube.md","localizedDate":"2025年6月17日","excerpt":"\\n<ul>\\n<li><strong>步骤一</strong>：minikube 执行文件下载（linux x86-64为例子）：\\n<ul>\\n<li>官方地址：(https://minikube.sigs.k8s.io/docs/start/?arch=%2Flinux%2Fx86-64%2Fstable%2Fbinary+download)´</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span></span>\\n<span class=\\"line\\"><span>    sudo install minikube-linux-amd64 /usr/local/bin/minikube &amp;&amp; rm minikube-linux-amd64</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li><strong>步骤二</strong> minikube 运行：\\n<ul>\\n<li>官方命令： <code>minikube start</code></li>\\n<li>我们需要做如下改动：<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>minikube start --vm-driver=docker --base-image=\\"anjone/kicbase\\" --force --kubernetes-version=1.23.0</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li><strong>问题一</strong>：因为政策等原因，dokcer-hub无法拉取到base镜像\\n<ul>\\n<li>错误信息（阻塞在镜像下载）：<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>Pending：   Pulling base image v0.0.44 ...</span></span>\\n<span class=\\"line\\"><span>            &gt; index.docker.io/kicbase/sta...:  0 B</span></span>\\n<span class=\\"line\\"><span>            E0811 15:29:59.503923   16810 cache.go:189] Error downloading kic artifacts:  failed to download kic base image or any fallback image</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>解决方案1：\\n<ul>\\n<li>使用命令行参数修改镜像源为阿里云</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span> minikube start --image-mirror-country=\'cn\' --image-repository=\'registry.cn-hangzhou.aliyuncs.com/google_containers</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div><ul>\\n<li>测试结果：❌未通过，猜测大部分云厂商的源站失效</li>\\n</ul>\\n</li>\\n<li>解决方案2：\\n<ul>\\n<li>修改镜像源，并将 base-image <code>anjone/kicbase</code> 拉到本地</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>    $ sudo vi /etc/docker/daemon.json</span></span>\\n<span class=\\"line\\"><span>    $ 修改registry-mirrors：</span></span>\\n<span class=\\"line\\"><span>    {</span></span>\\n<span class=\\"line\\"><span>        \\"registry-mirrors\\": [</span></span>\\n<span class=\\"line\\"><span>            \\"https://hub.uuuadc.top\\",</span></span>\\n<span class=\\"line\\"><span>            \\"https://dockerpull.com\\",</span></span>\\n<span class=\\"line\\"><span>            \\"https://docker.1panel.live\\"</span></span>\\n<span class=\\"line\\"><span>        ]</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>    $ sudo systemctl restart docker</span></span>\\n<span class=\\"line\\"><span>    $ docker pull anjone/kicbase</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>测试结果：✅ 通过</li>\\n<li>源站来源：https://github.com/Navyum/CF-Workers-docker.io\\n<ul>\\n<li>自己搭建</li>\\n<li>使用别人搭建好的</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><strong>问题二</strong>：默认会使用最新版kubernetes（测试时为v1.30.0），不支持docker\\n<ul>\\n<li>错误信息（提示需要使用cri-docker）：<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>❌  Exiting due to RT_DOCKER_MISSING_CRI_DOCKER_NONE: sudo systemctl enable cri-docker.socket: Process exited with status 1</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>解决方案1：\\n<ul>\\n<li>使用ci-dockerd<a href=\\"https://github.com/Mirantis/cri-dockerd/releases\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">github地址</a></li>\\n<li>测试结果：未测试</li>\\n</ul>\\n</li>\\n<li>解决方案2:\\n<ul>\\n<li>使用支持docker的低版本kubernetes，例如1.23.0</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span> --kubernetes-version=1.23.0</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div><ul>\\n<li>测试结果：✅ 通过</li>\\n</ul>\\n</li>\\n<li>--vm-driver 参数说明：\\n<ul>\\n<li>指定为docker，即通过docker运行minikube环境。我是在EC2环境中使用</li>\\n</ul>\\n</li>\\n<li>--force 参数说明：\\n<ul>\\n<li>使用root运行，不推荐</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>运行成功截图：\\n*</li>\\n</ul>\\n</li>\\n<li><strong>步骤三</strong> 检查minikube 运行状态：<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>$ kubectl get nodes</span></span>\\n<span class=\\"line\\"><span>    NAME       STATUS   ROLES                  AGE   VERSION</span></span>\\n<span class=\\"line\\"><span>    minikube   Ready    control-plane,master   16h   v1.23.0</span></span>\\n<span class=\\"line\\"><span>$ minikube status</span></span>\\n<span class=\\"line\\"><span>    minikube</span></span>\\n<span class=\\"line\\"><span>    type: Control Plane</span></span>\\n<span class=\\"line\\"><span>    host: Running</span></span>\\n<span class=\\"line\\"><span>    kubelet: Running</span></span>\\n<span class=\\"line\\"><span>    apiserver: Running</span></span>\\n<span class=\\"line\\"><span>    kubeconfig: Configured</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li><strong>步骤四</strong> 安装kubectl、kubeadm、kubelet：\\n<ul>\\n<li>解决方案1：\\n<ul>\\n<li>使用官方地址下载可执行文件：\\n<ul>\\n<li>本例子使用的kubenetes版本为1.23.0，需要下载对应版本的kubectl</li>\\n<li>KUBERNETES_VERSION 替换为你需要的版本，本例子为1.23.0</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>$ curl -LO https://dl.k8s.io/release/KUBERNETES_VERSION/bin/linux/amd64/kubectl</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>测试结果：❌ 未通过，速度太慢</li>\\n</ul>\\n</li>\\n<li>解决方案2：\\n<ul>\\n<li>\\n<p>使用yum源下载指定版本（centos）</p>\\n<ul>\\n<li>添加k8s仓库源</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>cat &lt;&lt; EOF &gt; /etc/yum.repos.d/kubernetes.repo </span></span>\\n<span class=\\"line\\"><span>    [kubernetes]</span></span>\\n<span class=\\"line\\"><span>    name=Kubernetes</span></span>\\n<span class=\\"line\\"><span>    baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span>\\n<span class=\\"line\\"><span>    enabled=1</span></span>\\n<span class=\\"line\\"><span>    gpgcheck=1</span></span>\\n<span class=\\"line\\"><span>    repo_gpgcheck=1</span></span>\\n<span class=\\"line\\"><span>    gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span>\\n<span class=\\"line\\"><span>EOF</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>下载1.23.0 版本kubectl</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>$ yum install -y kubectl-1.23.0</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>测试结果：✅通过</p>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><strong>步骤四</strong> 创建Deployment：\\n<ul>\\n<li>官方推荐的yaml，拉取image太慢，使用阿里云的测试即可</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>$ kubectl create deployment hello-minikube --image=registry.aliyuncs.com/google_containers/echoserver:1.10</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li><strong>步骤五</strong> expose到外网：\\n<ul>\\n<li>如果使用的是阿里云、腾讯云主机，需要在控制台开启对应端口号，否则可能无法访问，本例子需要手动开启Port 8080</li>\\n<li>expose 到8080端口</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>$ kubectl expose deployment hello-minikube --type=NodePort --port=8080</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div><ul>\\n<li>查看服务：</li>\\n</ul>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>$ kubectl get pod -o wide</span></span>\\n<span class=\\"line\\"><span>    NAME                              READY   STATUS    RESTARTS   AGE     IP           NODE       NOMINATED NODE   READINESS GATES</span></span>\\n<span class=\\"line\\"><span>    hello-minikube-6899fcbcf5-qdb2p   1/1     Running   0          2m28s   172.17.0.3   minikube   &lt;none&gt;           &lt;none&gt;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>$ kubectl get svc -o wide</span></span>\\n<span class=\\"line\\"><span>    NAME             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE     SELECTOR</span></span>\\n<span class=\\"line\\"><span>    hello-minikube   NodePort    10.109.145.31   &lt;none&gt;        8080:32484/TCP   100s    app=hello-minikube</span></span>\\n<span class=\\"line\\"><span>    kubernetes       ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP          2m38s   &lt;none&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}')}}]);