"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[13826],{36995:(e,t)=>{t.A=(e,t)=>{const o=e.__vccOpts||e;for(const[e,n]of t)o[e]=n;return o}},64061:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>a,data:()=>r});var n=o(6254);const i={},a=(0,o(36995).A)(i,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,t[0]||(t[0]=[(0,n.Fv)('<p>G、P、M</p><p>Goroutine Machine</p><p>Goroutine Processor Machine</p><p>Goroutine Machine</p><p>Goroutine Machine</p><p>... ...</p><ol><li><p>多对多</p></li><li><p>由Porcessor负责对接Gorutine(用户级线程)和Machine(系统级线程) <img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5f7a6dc3bb43fbdd044ff11b5550ae40.png" alt="图片" loading="lazy"></p></li><li><p>go函数真正被执行的时间，总会与其所属的go语句被执行的时间不同，会比go语句慢。只要go语句本身执行完毕，Go 程序完全不会等待go函数的执行，它会立刻去执行后边的语句。这就是所谓的异步并发地执行。</p></li><li><p>在go语句被执行时，我们传给go函数的参数i会先被求值。</p></li><li><p>当多个Goroutine存在竞态时（race condition），需要使用sync/atomic ，进行原子操作。e.g.atomic.AddUint32(&amp;count, 1)</p></li></ol>',7)]))}]]),r=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/golang/goroutine.html","title":"goroutine","lang":"zh-CN","frontmatter":{"title":"goroutine","author":"navyum","date":"2025-06-21T22:24:37.000Z","article":true,"index":true,"headerDepth":2,"sticky":false,"star":false,"category":["笔记"],"tag":["笔记"],"description":"G、P、M Goroutine Machine Goroutine Processor Machine Goroutine Machine Goroutine Machine ... ... 多对多 由Porcessor负责对接Gorutine(用户级线程)和Machine(系统级线程) 图片 go函数真正被执行的时间，总会与其所属的go语句被执行的时...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/golang/goroutine.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"goroutine"}],["meta",{"property":"og:description","content":"G、P、M Goroutine Machine Goroutine Processor Machine Goroutine Machine Goroutine Machine ... ... 多对多 由Porcessor负责对接Gorutine(用户级线程)和Machine(系统级线程) 图片 go函数真正被执行的时间，总会与其所属的go语句被执行的时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5f7a6dc3bb43fbdd044ff11b5550ae40.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T14:30:17.000Z"}],["meta",{"property":"article:author","content":"navyum"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:published_time","content":"2025-06-21T22:24:37.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T14:30:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"goroutine\\",\\"image\\":[\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5f7a6dc3bb43fbdd044ff11b5550ae40.png\\"],\\"datePublished\\":\\"2025-06-21T22:24:37.000Z\\",\\"dateModified\\":\\"2025-06-21T14:30:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750516217000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":2,"url":"https://github.com/Navyum"}]},"readingTime":{"minutes":0.69,"words":207},"filePathRelative":"编程语言/golang/goroutine.md","localizedDate":"2025年6月21日","excerpt":"<p>G、P、M</p>\\n<p>Goroutine                                                       Machine</p>\\n<p>Goroutine                     Processor                         Machine</p>\\n<p>Goroutine                                                       Machine</p>\\n<p>Goroutine                                                       Machine</p>","autoDesc":true}')}}]);