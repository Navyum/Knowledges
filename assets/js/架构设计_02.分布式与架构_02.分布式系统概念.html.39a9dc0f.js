"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[46848],{36995:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,n]of t)a[e]=n;return a}},81019:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>r,data:()=>c});var n=a(6254);const i={},r=(0,a(36995).A)(i,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,t[0]||(t[0]=[(0,n.Fv)('<h3 id="soa-基于服务的架构思想" tabindex="-1"><a class="header-anchor" href="#soa-基于服务的架构思想"><span>SOA：基于服务的架构思想</span></a></h3><ul><li>开发、维护和使用 SOA 要遵循以下几条基本原则： （ 可重用，粒度合适，模块化，可组合，构件化以及有互操作性。</li><li>符合开放标准（通用的或行业的）。服务的识别和分类，提供和发布，监控和跟踪。 <img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/1dd7e13a1931da98bd451312dc51b594.png" alt="图片" loading="lazy"></li></ul><h3 id="使用分布式系统主要有两方面原因" tabindex="-1"><a class="header-anchor" href="#使用分布式系统主要有两方面原因"><span>使用分布式系统主要有两方面原因:</span></a></h3><h4 id="增大系统容量" tabindex="-1"><a class="header-anchor" href="#增大系统容量"><span>增大系统容量</span></a></h4><pre><code>* 我们的业务量越来越大，而要能应对越来越大的业务量，一台机器的性能已经无法满足了，我们需要多台机器才能应对大规模的应用场景。所以，我们需要垂直或是水平拆分业务系统，让其变成一个分布式的架构。\n</code></pre><h4 id="加强系统可用" tabindex="-1"><a class="header-anchor" href="#加强系统可用"><span>加强系统可用</span></a></h4><pre><code>* 我们的业务越来越关键，需要提高整个系统架构的可用性，这就意味着架构中不能存在单点故障。这样，整个系统不会因为一台机器出故障而导致整体不可用。所以，需要通过分布式架构来冗余系统以消除单点故障，从而提高系统的可用性。\n</code></pre><h3 id="与单体的优缺点比较" tabindex="-1"><a class="header-anchor" href="#与单体的优缺点比较"><span>与单体的优缺点比较</span></a></h3><figure><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/12745254975ba5c2015182b3b8ec4f27.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点：</span></a></h4><ul><li>架构设计变得<code>复杂</code>（尤其是其中的分布式事务）</li><li>部署单个服务会比较快，但是如果一次部署需要多个服务，<code>流程复杂</code></li><li>系统的吞吐量会变大，但是<code>响应时间会变长</code></li><li><code>运维复杂</code>度会因为服务变多而变得很复杂</li><li>架构复杂导致<code>学习曲线</code>变大</li><li>测试和查错的复杂度增大</li><li>技术多元化，这会带来维护和运维的复杂度</li><li>管理分布式系统中的服务和调度变得困难和复杂</li></ul>',11)]))}]]),c=JSON.parse('{"path":"/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/02.%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E6%9E%B6%E6%9E%84/02.%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5.html","title":"02.分布式系统概念","lang":"zh-CN","frontmatter":{"title":"02.分布式系统概念","date":"2025-06-17T14:38:13.000Z","author":"Navyum","tags":["架构设计"],"categories":["分布式"],"article":true,"index":true,"headerDepth":2,"sticky":false,"star":true,"description":"SOA：基于服务的架构思想 开发、维护和使用 SOA 要遵循以下几条基本原则： （ 可重用，粒度合适，模块化，可组合，构件化以及有互操作性。 符合开放标准（通用的或行业的）。服务的识别和分类，提供和发布，监控和跟踪。 图片 使用分布式系统主要有两方面原因: 增大系统容量 加强系统可用 与单体的优缺点比较 图片图片 缺点： 架构设计变得复杂（尤其是其中的...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/02.%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E6%9E%B6%E6%9E%84/02.%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"02.分布式系统概念"}],["meta",{"property":"og:description","content":"SOA：基于服务的架构思想 开发、维护和使用 SOA 要遵循以下几条基本原则： （ 可重用，粒度合适，模块化，可组合，构件化以及有互操作性。 符合开放标准（通用的或行业的）。服务的识别和分类，提供和发布，监控和跟踪。 图片 使用分布式系统主要有两方面原因: 增大系统容量 加强系统可用 与单体的优缺点比较 图片图片 缺点： 架构设计变得复杂（尤其是其中的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/1dd7e13a1931da98bd451312dc51b594.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-17T07:42:14.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"架构设计"}],["meta",{"property":"article:published_time","content":"2025-06-17T14:38:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-17T07:42:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02.分布式系统概念\\",\\"image\\":[\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/1dd7e13a1931da98bd451312dc51b594.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/12745254975ba5c2015182b3b8ec4f27.png\\"],\\"datePublished\\":\\"2025-06-17T14:38:13.000Z\\",\\"dateModified\\":\\"2025-06-17T07:42:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750146134000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":1,"url":"https://github.com/haijun_yang"}]},"readingTime":{"minutes":1.65,"words":496},"filePathRelative":"架构设计/02.分布式与架构/02.分布式系统概念.md","localizedDate":"2025年6月17日","excerpt":"<h3>SOA：基于服务的架构思想</h3>\\n<ul>\\n<li>开发、维护和使用 SOA 要遵循以下几条基本原则：\\n（ 可重用，粒度合适，模块化，可组合，构件化以及有互操作性。</li>\\n<li>符合开放标准（通用的或行业的）。服务的识别和分类，提供和发布，监控和跟踪。\\n<img src=\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/1dd7e13a1931da98bd451312dc51b594.png\\" alt=\\"图片\\" loading=\\"lazy\\"></li>\\n</ul>\\n<h3>使用分布式系统主要有两方面原因:</h3>\\n<h4>增大系统容量</h4>","autoDesc":true}')}}]);