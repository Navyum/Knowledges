"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[61985],{36995:(e,t)=>{t.A=(e,t)=>{const c=e.__vccOpts||e;for(const[e,a]of t)c[e]=a;return c}},44315:(e,t,c)=>{c.r(t),c.d(t,{comp:()=>n,data:()=>o});var a=c(6254);const i={},n=(0,c(36995).A)(i,[["render",function(e,t){return(0,a.uX)(),(0,a.CE)("div",null,t[0]||(t[0]=[(0,a.Fv)('<h3 id="基本信息" tabindex="-1"><a class="header-anchor" href="#基本信息"><span>基本信息：</span></a></h3><ul><li><p>在内核中，Socket是一个文件，对应一个文件描述符。文件描述符是一个整数，是描述符数组的下标值</p></li><li><p>每一个进程都有一个数据结构 <code>task_struct</code>，里面指向一个<code>文件描述符数组</code>，表示这个进程打开的所有文件的文件描述符</p></li><li><p>socket 对应的 inode 指向了 Socket 在内核中的 <code>socket 结构</code></p></li><li><p><code>socket 结构</code>有两个队列，即发送队列sk_write_queue和接收队列sk_recieve_queue</p></li><li><p>队列里面保存的是若干缓存 <code>sk_buff</code>，即套接字缓冲区</p></li><li><p>套接字缓冲区<code>sk_buf</code>里面存储的是包的信息</p></li><li><p>Socket相关结构： <img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5c5c80c3921c536bda3cc814985fba56.png" alt="图片" loading="lazy"></p></li></ul><h3 id="通过socket-数据包发送" tabindex="-1"><a class="header-anchor" href="#通过socket-数据包发送"><span>通过socket 数据包发送：</span></a></h3><figure><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/085bb049b4733f86735d213c6cdd1794.png" alt="Img" tabindex="0" loading="lazy"><figcaption>Img</figcaption></figure><h3 id="基于tcp-的socket" tabindex="-1"><a class="header-anchor" href="#基于tcp-的socket"><span>基于TCP 的socket:</span></a></h3><figure><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/d2832ef3900e2d060ce0709ba3118e5c.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h3 id="基于udp-的socket" tabindex="-1"><a class="header-anchor" href="#基于udp-的socket"><span>基于UDP 的socket:</span></a></h3><figure><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/fcd2652ead107624fe7e1181047c01df.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure>',8)]))}]]),o=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/10.socket%E7%BC%96%E7%A8%8B.html","title":"12.socket编程","lang":"zh-CN","frontmatter":{"title":"12.socket编程","date":"2024-04-17T19:34:33.000Z","author":"Navyum","tags":["socket编程"],"categories":["网络"],"article":true,"index":true,"headerDepth":2,"sticky":false,"star":false,"icon":"zondicons:network","description":"基本信息： 在内核中，Socket是一个文件，对应一个文件描述符。文件描述符是一个整数，是描述符数组的下标值 每一个进程都有一个数据结构 task_struct，里面指向一个文件描述符数组，表示这个进程打开的所有文件的文件描述符 socket 对应的 inode 指向了 Socket 在内核中的 socket 结构 socket 结构有两个队列，即发送...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/10.socket%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"12.socket编程"}],["meta",{"property":"og:description","content":"基本信息： 在内核中，Socket是一个文件，对应一个文件描述符。文件描述符是一个整数，是描述符数组的下标值 每一个进程都有一个数据结构 task_struct，里面指向一个文件描述符数组，表示这个进程打开的所有文件的文件描述符 socket 对应的 inode 指向了 Socket 在内核中的 socket 结构 socket 结构有两个队列，即发送..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5c5c80c3921c536bda3cc814985fba56.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-23T09:35:21.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"socket编程"}],["meta",{"property":"article:published_time","content":"2024-04-17T19:34:33.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-23T09:35:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"12.socket编程\\",\\"image\\":[\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5c5c80c3921c536bda3cc814985fba56.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/085bb049b4733f86735d213c6cdd1794.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/d2832ef3900e2d060ce0709ba3118e5c.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/fcd2652ead107624fe7e1181047c01df.png\\"],\\"datePublished\\":\\"2024-04-17T19:34:33.000Z\\",\\"dateModified\\":\\"2025-06-23T09:35:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750671321000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":3,"url":"https://github.com/haijun_yang"}]},"readingTime":{"minutes":0.78,"words":234},"filePathRelative":"计算机网络/10.socket编程.md","localizedDate":"2024年4月17日","excerpt":"<h3>基本信息：</h3>\\n<ul>\\n<li>\\n<p>在内核中，Socket是一个文件，对应一个文件描述符。文件描述符是一个整数，是描述符数组的下标值</p>\\n</li>\\n<li>\\n<p>每一个进程都有一个数据结构 <code>task_struct</code>，里面指向一个<code>文件描述符数组</code>，表示这个进程打开的所有文件的文件描述符</p>\\n</li>\\n<li>\\n<p>socket 对应的 inode 指向了 Socket 在内核中的 <code>socket 结构</code></p>\\n</li>\\n<li>\\n<p><code>socket 结构</code>有两个队列，即发送队列sk_write_queue和接收队列sk_recieve_queue</p>\\n</li>\\n<li>\\n<p>队列里面保存的是若干缓存 <code>sk_buff</code>，即套接字缓冲区</p>\\n</li>\\n<li>\\n<p>套接字缓冲区<code>sk_buf</code>里面存储的是包的信息</p>\\n</li>\\n<li>\\n<p>Socket相关结构：\\n<img src=\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5c5c80c3921c536bda3cc814985fba56.png\\" alt=\\"图片\\" loading=\\"lazy\\"></p>\\n</li>\\n</ul>","autoDesc":true}')}}]);