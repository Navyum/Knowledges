"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[67518],{36995:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,n]of t)a[e]=n;return a}},84339:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>l,data:()=>o});var n=a(6254);const i={},l=(0,a(36995).A)(i,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,t[0]||(t[0]=[(0,n.Fv)('<h2 id="哈希函数" tabindex="-1"><a class="header-anchor" href="#哈希函数"><span>哈希函数</span></a></h2><h3 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标：</span></a></h3><ul><li>极快且稳定</li></ul><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点：</span></a></h3><ul><li>确定性/<code>幂等性</code>： <ul><li>对于相同的输入，哈希算法应始终产生相同的输出。这样才能确保哈希表是可靠的。</li></ul></li><li><code>效率高</code>： <ul><li>计算哈希值的过程应该足够快，哈希表的实用性越高。</li></ul></li><li><code>均匀分布</code>： <ul><li>哈希算法应使得键值对均匀分布在哈希表中。分布越均匀，哈希冲突的概率就越低。</li></ul></li></ul><h3 id="常见的哈希算法" tabindex="-1"><a class="header-anchor" href="#常见的哈希算法"><span>常见的哈希算法：</span></a></h3><ul><li>MD5</li><li>SHA-1、SHA-2、SHA-3</li><li>CRC16、CRC32</li></ul><h3 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点"><span>注意点：</span></a></h3><ul><li>只有<code>不可变对象</code>才能保证结果的幂等，才能被哈希，作为哈希表的 key</li></ul>',9)]))}]]),o=JSON.parse('{"path":"/%E7%AE%97%E6%B3%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/02.%E5%93%88%E5%B8%8C%E8%A1%A8/2.%E5%93%88%E5%B8%8C%E5%87%BD%E6%95%B0.html","title":"2.哈希函数","lang":"zh-CN","frontmatter":{"title":"2.哈希函数","date":"2025-06-17T14:51:53.000Z","author":"Navyum","tags":["哈希函数"],"categories":["数据结构"],"article":true,"index":true,"headerDepth":2,"sticky":false,"star":true,"description":"哈希函数 目标： 极快且稳定 特点： 确定性/幂等性： 对于相同的输入，哈希算法应始终产生相同的输出。这样才能确保哈希表是可靠的。 效率高： 计算哈希值的过程应该足够快，哈希表的实用性越高。 均匀分布： 哈希算法应使得键值对均匀分布在哈希表中。分布越均匀，哈希冲突的概率就越低。 常见的哈希算法： MD5 SHA-1、SHA-2、SHA-3 CRC16、...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E7%AE%97%E6%B3%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/02.%E5%93%88%E5%B8%8C%E8%A1%A8/2.%E5%93%88%E5%B8%8C%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"2.哈希函数"}],["meta",{"property":"og:description","content":"哈希函数 目标： 极快且稳定 特点： 确定性/幂等性： 对于相同的输入，哈希算法应始终产生相同的输出。这样才能确保哈希表是可靠的。 效率高： 计算哈希值的过程应该足够快，哈希表的实用性越高。 均匀分布： 哈希算法应使得键值对均匀分布在哈希表中。分布越均匀，哈希冲突的概率就越低。 常见的哈希算法： MD5 SHA-1、SHA-2、SHA-3 CRC16、..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-17T07:42:14.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"哈希函数"}],["meta",{"property":"article:published_time","content":"2025-06-17T14:51:53.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-17T07:42:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.哈希函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-17T14:51:53.000Z\\",\\"dateModified\\":\\"2025-06-17T07:42:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750146134000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":1,"url":"https://github.com/haijun_yang"}]},"readingTime":{"minutes":0.66,"words":199},"filePathRelative":"算法数据结构/数据结构/02.哈希表/2.哈希函数.md","localizedDate":"2025年6月17日","excerpt":"<h2>哈希函数</h2>\\n<h3>目标：</h3>\\n<ul>\\n<li>极快且稳定</li>\\n</ul>\\n<h3>特点：</h3>\\n<ul>\\n<li>确定性/<code>幂等性</code>：\\n<ul>\\n<li>对于相同的输入，哈希算法应始终产生相同的输出。这样才能确保哈希表是可靠的。</li>\\n</ul>\\n</li>\\n<li><code>效率高</code>：\\n<ul>\\n<li>计算哈希值的过程应该足够快，哈希表的实用性越高。</li>\\n</ul>\\n</li>\\n<li><code>均匀分布</code>：\\n<ul>\\n<li>哈希算法应使得键值对均匀分布在哈希表中。分布越均匀，哈希冲突的概率就越低。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}')}}]);