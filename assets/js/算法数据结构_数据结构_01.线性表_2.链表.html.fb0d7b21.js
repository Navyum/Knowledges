"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[52988],{5016:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>n,data:()=>r});var i=a(6254);const l={},n=(0,a(36995).A)(l,[["render",function(e,t){return(0,i.uX)(),(0,i.CE)("div",null,t[0]||(t[0]=[(0,i.Fv)('<h2 id="链表-linked-list" tabindex="-1"><a class="header-anchor" href="#链表-linked-list"><span>链表 Linked List：</span></a></h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念：</span></a></h3><ul><li>数组（Array）是一种线性表数据结构</li><li>用<code>非连续的内存空间</code>，来存储具有<code>相同类型的数据</code>的数据结构</li><li>每个节点包含<code>数据部分</code>和<code>指针</code>，指针指向下一个（或上一个，对于双向链表）节点</li></ul><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点：</span></a></h3><ul><li>动态大小：链表的大小可以在运行时改变</li><li>不连续的内存：节点可以在内存中分散存储，通过指针相连</li></ul><h3 id="优缺" tabindex="-1"><a class="header-anchor" href="#优缺"><span>优缺：</span></a></h3><ul><li>优点：插入、删除（改指针）</li><li>缺点：查询、更新（遍历）</li></ul><h3 id="图解" tabindex="-1"><a class="header-anchor" href="#图解"><span>图解：</span></a></h3><ul><li>内存地址不连续</li><li>从头节点开始，通过指针遍历的方式访问。（指针记录下一个节点的内存地址） <img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/01502a16c5dfd9beca605c7589a3416b.png" width="60%"></li></ul><h3 id="链表操作" tabindex="-1"><a class="header-anchor" href="#链表操作"><span>链表操作：</span></a></h3><ul><li>初始化链表</li><li>访问元素</li><li>插入元素</li><li>删除元素</li><li>遍历数组</li><li>查找元素</li><li><em>扩容数组</em></li></ul><h3 id="常见链表" tabindex="-1"><a class="header-anchor" href="#常见链表"><span>常见链表：</span></a></h3><ul><li>单向链表 <ul><li>栈与队列、哈希表的链式地址、图的邻接表</li></ul></li><li>环形链表 <ul><li>时间片轮转调度算法、数据缓冲区</li></ul></li><li>双向链表 <ul><li>红黑树、B树、浏览器历史、LRU 算法</li></ul></li></ul><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/085894e767082231bc3e688e02a3ccbb.png" width="60%">',14)]))}]]),r=JSON.parse('{"path":"/%E7%AE%97%E6%B3%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%BA%BF%E6%80%A7%E8%A1%A8/2.%E9%93%BE%E8%A1%A8.html","title":"2.链表","lang":"zh-CN","frontmatter":{"title":"2.链表","date":"2025-06-17T14:50:49.000Z","author":"Navyum","tags":["链表"],"categories":["数据结构"],"article":true,"index":true,"headerDepth":2,"sticky":false,"star":true,"description":"链表 Linked List： 概念： 数组（Array）是一种线性表数据结构 用非连续的内存空间，来存储具有相同类型的数据的数据结构 每个节点包含数据部分和指针，指针指向下一个（或上一个，对于双向链表）节点 特点： 动态大小：链表的大小可以在运行时改变 不连续的内存：节点可以在内存中分散存储，通过指针相连 优缺： 优点：插入、删除（改指针） 缺点：查...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E7%AE%97%E6%B3%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%BA%BF%E6%80%A7%E8%A1%A8/2.%E9%93%BE%E8%A1%A8.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"2.链表"}],["meta",{"property":"og:description","content":"链表 Linked List： 概念： 数组（Array）是一种线性表数据结构 用非连续的内存空间，来存储具有相同类型的数据的数据结构 每个节点包含数据部分和指针，指针指向下一个（或上一个，对于双向链表）节点 特点： 动态大小：链表的大小可以在运行时改变 不连续的内存：节点可以在内存中分散存储，通过指针相连 优缺： 优点：插入、删除（改指针） 缺点：查..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-17T07:42:14.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"链表"}],["meta",{"property":"article:published_time","content":"2025-06-17T14:50:49.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-17T07:42:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.链表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-17T14:50:49.000Z\\",\\"dateModified\\":\\"2025-06-17T07:42:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750146134000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":1,"url":"https://github.com/haijun_yang"}]},"readingTime":{"minutes":1.05,"words":315},"filePathRelative":"算法数据结构/数据结构/01.线性表/2.链表.md","localizedDate":"2025年6月17日","excerpt":"<h2>链表 Linked List：</h2>\\n<h3>概念：</h3>\\n<ul>\\n<li>数组（Array）是一种线性表数据结构</li>\\n<li>用<code>非连续的内存空间</code>，来存储具有<code>相同类型的数据</code>的数据结构</li>\\n<li>每个节点包含<code>数据部分</code>和<code>指针</code>，指针指向下一个（或上一个，对于双向链表）节点</li>\\n</ul>\\n<h3>特点：</h3>\\n<ul>\\n<li>动态大小：链表的大小可以在运行时改变</li>\\n<li>不连续的内存：节点可以在内存中分散存储，通过指针相连</li>\\n</ul>","autoDesc":true}')},36995:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,i]of t)a[e]=i;return a}}}]);