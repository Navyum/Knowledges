"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[16882],{36995:(a,t)=>{t.A=(a,t)=>{const e=a.__vccOpts||a;for(const[a,n]of t)e[a]=n;return e}},91585:(a,t,e)=>{e.r(t),e.d(t,{comp:()=>i,data:()=>r});var n=e(6254);const s={},i=(0,e(36995).A)(s,[["render",function(a,t){return(0,n.uX)(),(0,n.CE)("div",null,t[0]||(t[0]=[(0,n.Fv)('<h2 id="gpt" tabindex="-1"><a class="header-anchor" href="#gpt"><span>GPT：</span></a></h2><ul><li>Generative Pre-Trained Transformer即生成式预训练转换器，其架构基于原始的 transformer 的<strong>解码器</strong></li></ul><h2 id="gpt主要训练阶段" tabindex="-1"><a class="header-anchor" href="#gpt主要训练阶段"><span>GPT主要训练阶段：</span></a></h2><h3 id="无监督预训练pt-unsupervised-pre-training" tabindex="-1"><a class="header-anchor" href="#无监督预训练pt-unsupervised-pre-training"><span>无监督预训练PT（Unsupervised Pre-training）：</span></a></h3><p>定义：在未标记的文本上预训练 GPT，从而利用丰富的文本语料库。该阶段又叫做生成式预训练。 任务：训练模型以了解语言的结构并捕获文本数据集中存在的统计模式。它不是针对特定的语言任务，而是<span style="color:rgb(255, 41, 65);">提高模型对语言本身的理解</span>。 具体：无监督预训练将一系列标记提供给模型（Transformer 解码器的变体）以预测下一个标记的概率。它在下图中显示为 “Text Prediction” （其中“Task Classifier” 用于监督微调SFT阶段） <img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/026b670dec056d8526150d6774badceb.png" alt="Img" loading="lazy"></p><h3 id="监督式微调sft-supervised-fine-tuning" tabindex="-1"><a class="header-anchor" href="#监督式微调sft-supervised-fine-tuning"><span>监督式微调SFT（Supervised Fine-tuning）：</span></a></h3><p>使用标记数据为每个特定任务微调预训练模型，又叫做判别性微调。</p><h4 id="简单分类任务" tabindex="-1"><a class="header-anchor" href="#简单分类任务"><span>简单分类任务：</span></a></h4><p>对于简单的分类任务，每个输入都由一系列标记和一个标签组成。它们将输入传递给预先训练的模型以获得最终的激活值，这些激活值被馈送到额外的线性 （+softmax） 输出层中</p><h4 id="文本蕴涵任务" tabindex="-1"><a class="header-anchor" href="#文本蕴涵任务"><span>文本蕴涵任务：</span></a></h4><p>将一对文本之间的关系进行分类。在给定前提（文本）的情况下推断假设另一个（文本）是正确的，那么这种关系就被归类为蕴涵。如果两者之间存在不一致，则关系被归类为矛盾。如果两者都不是真的，则关系被归类为中性。</p><h4 id="相似度任务" tabindex="-1"><a class="header-anchor" href="#相似度任务"><span>相似度任务：</span></a></h4><p>比较的两个句子之间没有方向关系（余弦法）</p><h4 id="问答和常识推理任务" tabindex="-1"><a class="header-anchor" href="#问答和常识推理任务"><span>问答和常识推理任务</span></a></h4><p>这些任务提供了一个上下文文档<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> 、一个问题<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>和一组可能的答案<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">{a_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>。对于每个可能的答案，都有一个输入序列。</p><h2 id="gpt-2" tabindex="-1"><a class="header-anchor" href="#gpt-2"><span>GPT-2：</span></a></h2><ul><li><p>GPT-2 是 GPT-1 的直接扩展，具有更多参数并在更多数据上进行训练（1.5B）</p><table><thead><tr><th style="text-align:left;">差异</th><th style="text-align:left;">GPT-1</th><th style="text-align:left;">GPT-2</th><th style="text-align:left;">GPT-3</th></tr></thead><tbody><tr><td style="text-align:left;">解码器个数</td><td style="text-align:left;">12</td><td style="text-align:left;">48</td><td style="text-align:left;">96</td></tr><tr><td style="text-align:left;">参数大小</td><td style="text-align:left;">0.15B</td><td style="text-align:left;">1.5B</td><td style="text-align:left;">17.5B</td></tr><tr><td style="text-align:left;">向量维度</td><td style="text-align:left;">512</td><td style="text-align:left;">1600</td><td style="text-align:left;">12288</td></tr></tbody></table></li><li><p>在GPT-1的实验中，在没有监督微调的情况下，语言模型已经包含执行特定任务所需的信息。即所有这些知识都存储在网络参数（权重和偏差）中。</p></li><li><p>因此，更多的参数应该会增加语言模型的容量，<strong>微调只是为特定任务的模型添加了最后的润色</strong>，因此使 GPT出色的主要因素是预训练</p></li></ul><h2 id="gpt-3" tabindex="-1"><a class="header-anchor" href="#gpt-3"><span>GPT-3：</span></a></h2><p>GPT-3 显示了纯粹通过文本交互处理任务的改进能力。这些任务包括零样本（Zero-shot）、单次（one-shot）和少量样本（few-shot）示例的学习，并且必须在没有额外训练的情况下（不使用微调）执行任务。</p><h3 id="元学习" tabindex="-1"><a class="header-anchor" href="#元学习"><span>元学习：</span></a></h3><ul><li>定义：能够学习根据过去的经验进行组合预测；学会了使用之前获得的技能来理解和实现所需的新任务</li></ul><h4 id="上下文学习-情境学习" tabindex="-1"><a class="header-anchor" href="#上下文学习-情境学习"><span>上下文学习（情境学习）：</span></a></h4><figure><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5053a72bfd83e3cd7408677d1ee5cbab.png" alt="Img" tabindex="0" loading="lazy"><figcaption>Img</figcaption></figure><ul><li>外循环：获得语言技能的无监督预训练</li><li>内循环：模型从示例序列中学习上下文，以预测接下来会发生什么</li><li>从GPT-2到GPT-3，随着参数规模的变化，情境学习才获得实质的突破</li></ul><h4 id="zero-shot" tabindex="-1"><a class="header-anchor" href="#zero-shot"><span>Zero-Shot：</span></a></h4><p>不允许演示，只提供自然语言的指导</p><h4 id="one-shot" tabindex="-1"><a class="header-anchor" href="#one-shot"><span>One-Shot：</span></a></h4><p>只允许一个演示</p><h4 id="few-shot" tabindex="-1"><a class="header-anchor" href="#few-shot"><span>Few-Shot：</span></a></h4><p>学习允许尽可能多的演示（通常为 10 到 100 个） <img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/7f3ff204a9477f831a32fded2f10d10c.png" alt="Img" width="50%" loading="lazy"></p><p><img src="https://raw.staticdn.net/Navyum/imgbed/pic/IMG/962dd7a9f23f11285c539e784d5f4d98.png" alt="Img" loading="lazy"> “ppl”代表困惑，越低越好，“acc”代表准确度，越高越好 具有大容量的预训练语言模型可以通过自然语言指令和演示来利用其语言能力来理解和完成所需的任务</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考：</span></a></h2><p><a href="https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf" target="_blank" rel="noopener noreferrer">Improving Language Understanding by Generative Pre-Training</a></p>',33)]))}]]),r=JSON.parse('{"path":"/%E5%A4%A7%E6%A8%A1%E5%9E%8BLLM/00.%E6%A6%82%E5%BF%B5/02.GPT.html","title":"02.GPT","lang":"zh-CN","frontmatter":{"title":"02.GPT","date":"2024-11-12T16:47:40.000Z","author":"Navyum","tags":["LLM","GPT"],"categories":["LLM","AI"],"description":"GPT： Generative Pre-Trained Transformer即生成式预训练转换器，其架构基于原始的 transformer 的解码器 GPT主要训练阶段： 无监督预训练PT（Unsupervised Pre-training）： 定义：在未标记的文本上预训练 GPT，从而利用丰富的文本语料库。该阶段又叫做生成式预训练。 任务：训练模型...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E5%A4%A7%E6%A8%A1%E5%9E%8BLLM/00.%E6%A6%82%E5%BF%B5/02.GPT.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"02.GPT"}],["meta",{"property":"og:description","content":"GPT： Generative Pre-Trained Transformer即生成式预训练转换器，其架构基于原始的 transformer 的解码器 GPT主要训练阶段： 无监督预训练PT（Unsupervised Pre-training）： 定义：在未标记的文本上预训练 GPT，从而利用丰富的文本语料库。该阶段又叫做生成式预训练。 任务：训练模型..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/026b670dec056d8526150d6774badceb.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-17T07:42:14.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"LLM"}],["meta",{"property":"article:tag","content":"GPT"}],["meta",{"property":"article:published_time","content":"2024-11-12T16:47:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-17T07:42:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02.GPT\\",\\"image\\":[\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/026b670dec056d8526150d6774badceb.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/5053a72bfd83e3cd7408677d1ee5cbab.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/7f3ff204a9477f831a32fded2f10d10c.png\\",\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/962dd7a9f23f11285c539e784d5f4d98.png\\"],\\"datePublished\\":\\"2024-11-12T16:47:40.000Z\\",\\"dateModified\\":\\"2025-06-17T07:42:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750146134000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":1,"url":"https://github.com/haijun_yang"}]},"readingTime":{"minutes":3.4,"words":1019},"filePathRelative":"大模型LLM/00.概念/02.GPT.md","localizedDate":"2024年11月12日","excerpt":"<h2>GPT：</h2>\\n<ul>\\n<li>Generative Pre-Trained Transformer即生成式预训练转换器，其架构基于原始的 transformer 的<strong>解码器</strong></li>\\n</ul>\\n<h2>GPT主要训练阶段：</h2>\\n<h3>无监督预训练PT（Unsupervised Pre-training）：</h3>\\n<p>定义：在未标记的文本上预训练 GPT，从而利用丰富的文本语料库。该阶段又叫做生成式预训练。\\n任务：训练模型以了解语言的结构并捕获文本数据集中存在的统计模式。它不是针对特定的语言任务，而是<span style=\\"color: rgb(255, 41, 65);\\">提高模型对语言本身的理解</span>。\\n具体：无监督预训练将一系列标记提供给模型（Transformer 解码器的变体）以预测下一个标记的概率。它在下图中显示为 “Text Prediction” （其中“Task Classifier” 用于监督微调SFT阶段）\\n<img src=\\"https://raw.staticdn.net/Navyum/imgbed/pic/IMG/026b670dec056d8526150d6774badceb.png\\" alt=\\"Img\\" loading=\\"lazy\\"></p>","autoDesc":true}')}}]);