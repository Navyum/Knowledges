"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[58926],{36995:(t,n)=>{n.A=(t,n)=>{const i=t.__vccOpts||t;for(const[t,e]of n)i[t]=e;return i}},42608:(t,n,i)=>{i.r(n),i.d(n,{comp:()=>p,data:()=>o});var e=i(6254);const l={},p=(0,i(36995).A)(l,[["render",function(t,n){return(0,e.uX)(),(0,e.CE)("div",null,n[0]||(n[0]=[(0,e.Fv)('<h2 id="go语言的基本类型包括" tabindex="-1"><a class="header-anchor" href="#go语言的基本类型包括"><span>Go语言的基本类型包括：</span></a></h2><ul><li><p>bool：布尔类型，取值为true或false。</p></li><li><p>string：字符串类型，表示一串字符。</p></li><li><p>int、int8、int16、int32、int64：整型类型，分别表示有符号的8位、16位、32位、64位整数。</p></li><li><p>uint、uint8、uint16、uint32、uint64：无符号整型类型，分别表示无符号的8位、16位、32位、64位整数。</p></li><li><p>uintptr：无符号整型类型，用于存放一个指针。</p></li><li><p>float32、float64：浮点型类型，分别表示32位、64位浮点数。</p></li><li><p>complex64、complex128：复数类型，分别表示64位、128位复数。 除了基本类型之外，Go语言还提供了其他类型，包括：</p></li><li><p>数组（array）：一组具有相同类型的数据的集合，长度固定不变。</p></li><li><p>切片（slice）：一组具有相同类型的数据的集合，长度可变。</p></li><li><p>映射（map）：一组键值对的集合。</p></li><li><p>结构体（struct）：一组具有不同类型的数据的集合。</p></li><li><p>接口（interface）：一组方法签名的集合，用于描述对象的行为。</p></li><li><p>函数（function）：一段可执行的代码块，可以接收参数并返回值。</p></li><li><p>在Go语言中，没有List类型，但是标准库中提供了container/list包、container/ring，</p></li></ul>',2)]))}]]),o=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/golang/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","title":"数据类型","lang":"zh-CN","frontmatter":{"title":"数据类型","author":"navyum","date":"2025-06-21T22:26:18.000Z","article":false,"index":true,"headerDepth":2,"sticky":false,"star":false,"category":["笔记"],"tag":["笔记"],"description":"Go语言的基本类型包括： bool：布尔类型，取值为true或false。 string：字符串类型，表示一串字符。 int、int8、int16、int32、int64：整型类型，分别表示有符号的8位、16位、32位、64位整数。 uint、uint8、uint16、uint32、uint64：无符号整型类型，分别表示无符号的8位、16位、32位、6...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/golang/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"数据类型"}],["meta",{"property":"og:description","content":"Go语言的基本类型包括： bool：布尔类型，取值为true或false。 string：字符串类型，表示一串字符。 int、int8、int16、int32、int64：整型类型，分别表示有符号的8位、16位、32位、64位整数。 uint、uint8、uint16、uint32、uint64：无符号整型类型，分别表示无符号的8位、16位、32位、6..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T14:30:17.000Z"}],["meta",{"property":"article:author","content":"navyum"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:published_time","content":"2025-06-21T22:26:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T14:30:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"数据类型\\",\\"description\\":\\"Go语言的基本类型包括： bool：布尔类型，取值为true或false。 string：字符串类型，表示一串字符。 int、int8、int16、int32、int64：整型类型，分别表示有符号的8位、16位、32位、64位整数。 uint、uint8、uint16、uint32、uint64：无符号整型类型，分别表示无符号的8位、16位、32位、6...\\"}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750516217000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":2,"url":"https://github.com/Navyum"}]},"readingTime":{"minutes":1.1,"words":329},"filePathRelative":"编程语言/golang/数据类型.md","localizedDate":"2025年6月21日","excerpt":"<h2>Go语言的基本类型包括：</h2>\\n<ul>\\n<li>\\n<p>bool：布尔类型，取值为true或false。</p>\\n</li>\\n<li>\\n<p>string：字符串类型，表示一串字符。</p>\\n</li>\\n<li>\\n<p>int、int8、int16、int32、int64：整型类型，分别表示有符号的8位、16位、32位、64位整数。</p>\\n</li>\\n<li>\\n<p>uint、uint8、uint16、uint32、uint64：无符号整型类型，分别表示无符号的8位、16位、32位、64位整数。</p>\\n</li>\\n<li>\\n<p>uintptr：无符号整型类型，用于存放一个指针。</p>\\n</li>\\n<li>\\n<p>float32、float64：浮点型类型，分别表示32位、64位浮点数。</p>\\n</li>\\n<li>\\n<p>complex64、complex128：复数类型，分别表示64位、128位复数。\\n除了基本类型之外，Go语言还提供了其他类型，包括：</p>\\n</li>\\n<li>\\n<p>数组（array）：一组具有相同类型的数据的集合，长度固定不变。</p>\\n</li>\\n<li>\\n<p>切片（slice）：一组具有相同类型的数据的集合，长度可变。</p>\\n</li>\\n<li>\\n<p>映射（map）：一组键值对的集合。</p>\\n</li>\\n<li>\\n<p>结构体（struct）：一组具有不同类型的数据的集合。</p>\\n</li>\\n<li>\\n<p>接口（interface）：一组方法签名的集合，用于描述对象的行为。</p>\\n</li>\\n<li>\\n<p>函数（function）：一段可执行的代码块，可以接收参数并返回值。</p>\\n</li>\\n<li>\\n<p>在Go语言中，没有List类型，但是标准库中提供了container/list包、container/ring，</p>\\n</li>\\n</ul>","autoDesc":true}')}}]);