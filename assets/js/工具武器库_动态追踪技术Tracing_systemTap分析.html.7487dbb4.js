"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[99048],{17715:(s,i,n)=>{n.r(i),n.d(i,{comp:()=>l,data:()=>e});var a=n(6254);const t={},l=(0,n(36995).A)(t,[["render",function(s,i){return(0,a.uX)(),(0,a.CE)("div",null,i[0]||(i[0]=[(0,a.Fv)('<h2 id="systemtap分析" tabindex="-1"><a class="header-anchor" href="#systemtap分析"><span>systemTap分析</span></a></h2><p>本文主要通过案例演示的方式，介绍个人在使用systemtap对nginx（openresty）进行网络相关的探测的使用过程、使用感受以及过程中遇到的问题</p><h3 id="背景介绍" tabindex="-1"><a class="header-anchor" href="#背景介绍"><span>背景介绍：</span></a></h3><p>问题： 分析openresty（nginx）在出现abort时，为什么FIN正常关闭TCP连接，而不是使用RST？</p><h3 id="第一步-需要知道如何添加探测点" tabindex="-1"><a class="header-anchor" href="#第一步-需要知道如何添加探测点"><span>第一步：需要知道如何添加探测点</span></a></h3><ul><li>探测点跟断点的概念类似，就是在指定位置，进行debug信息的输出</li><li><strong>重要！</strong> 查看对应程序的所有function，以nginx为例<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 查看Nginx可用的探针点</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;process(&quot;/usr/local/openresty/nginx/sbin/nginx&quot;).function(&quot;*&quot;)&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">还有一种方式是：使用nm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./sbin/nginx，但是看不到参数和文件位置</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 看到的输出如下：</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  ...</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_variables_add_core_vars@src/http/ngx_http_variables.c:2592&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$cf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_conf_t*</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_variables_init_vars@src/http/ngx_http_variables.c:2635&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$cf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_conf_t* </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_hash_init_t</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_wait_request_handler@src/http/ngx_http_request.c:375&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_event_t*</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_weak_etag@src/http/ngx_http_core_module.c:1703&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_http_request_t*</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_write_filter@src/http/ngx_http_write_filter_module.c:48&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_http_request_t* </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_chain_t*</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_write_filter_init@src/http/ngx_http_write_filter_module.c:362&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$cf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_conf_t*</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_write_request_body@src/http/ngx_http_request_body.c:484&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_http_request_t*</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_writer@src/http/ngx_http_request.c:2786&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_http_request_t*</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_http_xss_body_filter@../xss-nginx-module-0.06/src/ngx_http_xss_filter_module.c:264&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_http_request_t* </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_chain_t* </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$ll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_chain_t**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>找到需要添加探测点的函数、结构体、变量 <ul><li>假设我们需要找nginx中，某个URI的函数调用栈信息</li><li>添加探测点之前，我们需要一些基础知识。nginx关闭连接的标准函数为：<code>ngx_close_connection</code></li><li>通过如下命令，查看当前版本是否可以添加相应探测点<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;process(&quot;/usr/local/openresty/nginx/sbin/nginx&quot;).function(&quot;*&quot;)&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ngx_close_connection</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">process(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;/usr/local/openresty/nginx/sbin/nginx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).function(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;ngx_close_connection@src/core/ngx_connection.c:1179&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:ngx_connection_t*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>这样我们确认当前的nginx版本存在函数，且得到该函数的第一个参数为<code>$c</code>，属于结构体指针<code>ngx_connection_t*</code></li></ul></li></ul><h3 id="第二步-编写stp脚本" tabindex="-1"><a class="header-anchor" href="#第二步-编写stp脚本"><span>第二步：编写stp脚本</span></a></h3><div class="language-tcp-close.stp line-numbers-mode" data-highlighter="shiki" data-ext="tcp-close.stp" data-title="tcp-close.stp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>probe process(&quot;/usr/local/openresty/nginx/sbin/nginx&quot;).function(&quot;ngx_close_connection&quot;) {</span></span>\n<span class="line"><span>    if (target() == pid()) {</span></span>\n<span class="line"><span>        printf(&quot;Close conn %d \\n&quot;, $c-&gt;number)</span></span>\n<span class="line"><span>        print_ubacktrace()</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>probe kernel.function(&quot;tcp_reset&quot;) {</span></span>\n<span class="line"><span>    if (pid() == target()) {</span></span>\n<span class="line"><span>        printf(&quot;TCP RST sent%s&quot;,$sk$)</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>probe kernel.function(&quot;tcp_send_fin&quot;) {</span></span>\n<span class="line"><span>    if (pid() == target()) {</span></span>\n<span class="line"><span>        printf(&quot;TCP FIN sent%s %s&quot;,$sk$, $skb$)</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第三步-执行并将结果可视化" tabindex="-1"><a class="header-anchor" href="#第三步-执行并将结果可视化"><span>第三步：执行并将结果可视化</span></a></h3><ul><li><p>执行：<code>stap tcp-close.stp -x &lt;pid&gt;</code>，同时使用curl请求url <code>curl $url</code></p></li><li><p>得到结果：</p><div class="language-log line-numbers-mode" data-highlighter="shiki" data-ext="log" data-title="log" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">ERROR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Close conn </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12090529</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x47cc10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_close_connection+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x330</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x4af7ed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_http_close_connection+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x4d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xa0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x4ac97a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_http_core_content_phase+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x2a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x170</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x4a6d45</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_http_core_run_phases+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x4b2d63</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_http_process_request+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xa3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x2d0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x4b3382</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_http_process_request_headers+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x3f2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x460</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x4b3754</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_http_process_request_line+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x364</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x498099</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_epoll_process_events+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x429</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x470</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x48ce33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_process_events_and_timers+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x93</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x2a0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x495b05</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_worker_process_cycle+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x45</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1b0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x49447c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_spawn_process+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x17c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x510</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x495e94</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_start_worker_processes+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x74</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xe0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x496ec4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : ngx_master_process_cycle+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x444</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xae0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x46af59</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : main+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x819</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xb38</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x7fb422a43555</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : __libc_start_main+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xf5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1c0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/lib64/libc-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">17</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.so]</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x46b2a1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : _start+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x29</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x38</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [/usr/local/openresty/nginx/sbin/nginx]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">TCP FIN sent{.__sk_common={...}, .sk_lock={...}, .sk_receive_queue={...}, .sk_backlog={...}, .sk_forward_alloc=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sk_rxhash=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2678085662</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .sk_napi_id=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .sk_ll_usec=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .sk_drops={...}, .sk_rcvbuf=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1061488</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .sk_filter=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sk_wq=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xffff8e3c05e69900</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .rh_reserved_sk_async_wait_queue={...}, .sk_policy=[...], .sk_flags=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">768</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sk_rx_dst=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xffff8e3c21fe1600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .sk_dst_cache=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xffff8e3c21fe1600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .rh_reserved_sk_dst_lock={...}, </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sk_wmem_alloc={...}, .sk_omem_alloc={...}, .sk_sndbuf=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2626560</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .sk_write_queue={...}, .sk_shutdown=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, .sk</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="第四步-结合源码-添加必要的变量输出" tabindex="-1"><a class="header-anchor" href="#第四步-结合源码-添加必要的变量输出"><span>第四步：结合源码，添加必要的变量输出</span></a></h3><ul><li><p>源码解读：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ngx_close_connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">ngx_connection_t</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 关键标志位 1：fd 有效性</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fd</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> !=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">ngx_socket_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // 关键标志位 2：linger 延迟关闭</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">          if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">timer_set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">              ngx_del_timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">          if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">timer_set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">              ngx_del_timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // 关键标志位 3：socket 关闭方式</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">          if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ngx_close_socket</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 实际关闭操作</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">              ngx_log_error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(NGX_LOG_ALERT, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, ngx_socket_errno,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                          &quot;close() socket </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> failed&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">          c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fd</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">ngx_socket_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 标记 fd 已关闭</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 关键标志位 4：连接池回收</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">          ngx_destroy_pool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 正常关闭会回收内存</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 关键标志位 5：destroyed 标记</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">      c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">destroyed</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 标记连接已销毁</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改脚本</p><div class="language-tcp-close.stp line-numbers-mode" data-highlighter="shiki" data-ext="tcp-close.stp" data-title="tcp-close.stp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># tcp-close.stp</span></span>\n<span class="line"><span>...</span></span>\n<span class="line"><span>修改第3行：printf(&quot;Close conn %d (fd:%d) error:%d destroyed:%d\\n&quot;, $c-&gt;number, $c-&gt;fd, $c-&gt;log-&gt;action, $c-&gt;destroyed)</span></span>\n<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>输出：</p><div class="language-log line-numbers-mode" data-highlighter="shiki" data-ext="log" data-title="log" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  Close conn </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12102682</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">fd:17</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">error:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8140054</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> destroyed:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>结论：<span style="color:rgb(255, 76, 65);">destroyed=1，表示nginx为正常退出</span></p></li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结：</span></a></h3><ul><li>使用systemtap时，需要知道探测点的具体位置，需要对当前程序、程序源码有比较深的理解</li><li>编写stp脚本，需要stp的基础语法认知，可以结合GPT编写（我测试下来，GPT对其语法掌握不是很全面，写完还需要手动修改，可能原因是太过于小众了）</li><li>编写脚本可能需要多次修改，最终才能获得满意的效果</li><li>对输出结果的理解，可以结合程序源码，一边看源码内容，一边看变量、程序栈情况，效果会更好。</li><li>使用感受： <ul><li>源码理解： <span style="color:rgb(255, 76, 65);">要求高</span></li><li>stp脚本语法：<span style="color:rgb(255, 76, 65);">要求高</span></li></ul></li></ul><h3 id="常见的错误" tabindex="-1"><a class="header-anchor" href="#常见的错误"><span>常见的错误：</span></a></h3><h4 id="_1-no-match" tabindex="-1"><a class="header-anchor" href="#_1-no-match"><span>1. no match</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>semantic error: while resolving probe point: identifier &#39;process&#39; at test.stp:8:7</span></span>\n<span class="line"><span>        source: probe process(&quot;/usr/local/openresty/nginx/sbin/nginx&quot;).mark(&quot;http_request_headers_filter&quot;) {</span></span>\n<span class="line"><span>                      ^</span></span>\n<span class="line"><span>semantic error: no match</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>错误原因：一般是process对应的探测点不存在，可能是源码版本不匹配等原因，或者是你的环境跟你抄的网上的别人的脚本环境不一致。即<code>http_request_headers_filter</code>这个函数在当前版本的nginx不存在。 解决方案：自己使用stap -L 查找下正确的探测点</p><h3 id="systemtap-教程" tabindex="-1"><a class="header-anchor" href="#systemtap-教程"><span>systemtap 教程</span></a></h3><ul><li><a href="https://sourceware.org/systemtap/documentation.html" target="_blank" rel="noopener noreferrer">documentation</a></li><li><a href="https://sourceware.org/systemtap/tapsets/" target="_blank" rel="noopener noreferrer">tapsets</a></li><li><a href="https://github.com/nginx/nginx" target="_blank" rel="noopener noreferrer">nginx 源码</a></li></ul>',20)]))}]]),e=JSON.parse('{"path":"/%E5%B7%A5%E5%85%B7%E6%AD%A6%E5%99%A8%E5%BA%93/%E5%8A%A8%E6%80%81%E8%BF%BD%E8%B8%AA%E6%8A%80%E6%9C%AFTracing/systemTap%E5%88%86%E6%9E%90.html","title":"systemTap分析","lang":"zh-CN","frontmatter":{"title":"systemTap分析","date":"2025-04-11T14:52:58.000Z","author":"Navyum","tags":["SystemTap","nginx源码","性能分析","TCP FIN","TCP RST"],"categories":["工具","性能分析","Systemtap"],"description":"systemTap分析 本文主要通过案例演示的方式，介绍个人在使用systemtap对nginx（openresty）进行网络相关的探测的使用过程、使用感受以及过程中遇到的问题 背景介绍： 问题： 分析openresty（nginx）在出现abort时，为什么FIN正常关闭TCP连接，而不是使用RST？ 第一步：需要知道如何添加探测点 探测点跟断点的概...","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E5%B7%A5%E5%85%B7%E6%AD%A6%E5%99%A8%E5%BA%93/%E5%8A%A8%E6%80%81%E8%BF%BD%E8%B8%AA%E6%8A%80%E6%9C%AFTracing/systemTap%E5%88%86%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"systemTap分析"}],["meta",{"property":"og:description","content":"systemTap分析 本文主要通过案例演示的方式，介绍个人在使用systemtap对nginx（openresty）进行网络相关的探测的使用过程、使用感受以及过程中遇到的问题 背景介绍： 问题： 分析openresty（nginx）在出现abort时，为什么FIN正常关闭TCP连接，而不是使用RST？ 第一步：需要知道如何添加探测点 探测点跟断点的概..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-17T03:50:17.000Z"}],["meta",{"property":"article:author","content":"Navyum"}],["meta",{"property":"article:tag","content":"SystemTap"}],["meta",{"property":"article:tag","content":"nginx源码"}],["meta",{"property":"article:tag","content":"性能分析"}],["meta",{"property":"article:tag","content":"TCP FIN"}],["meta",{"property":"article:tag","content":"TCP RST"}],["meta",{"property":"article:published_time","content":"2025-04-11T14:52:58.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-17T03:50:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"systemTap分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-11T14:52:58.000Z\\",\\"dateModified\\":\\"2025-06-17T03:50:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1750132217000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"},{"name":"haijun_yang","username":"haijun_yang","email":"haijun_yang@intsig.net","commits":1,"url":"https://github.com/haijun_yang"}]},"readingTime":{"minutes":4,"words":1199},"filePathRelative":"工具武器库/动态追踪技术Tracing/systemTap分析.md","localizedDate":"2025年4月11日","excerpt":"<h2>systemTap分析</h2>\\n<p>本文主要通过案例演示的方式，介绍个人在使用systemtap对nginx（openresty）进行网络相关的探测的使用过程、使用感受以及过程中遇到的问题</p>\\n<h3>背景介绍：</h3>\\n<p>问题： 分析openresty（nginx）在出现abort时，为什么FIN正常关闭TCP连接，而不是使用RST？</p>\\n<h3>第一步：需要知道如何添加探测点</h3>\\n<ul>\\n<li>探测点跟断点的概念类似，就是在指定位置，进行debug信息的输出</li>\\n<li><strong>重要！</strong> 查看对应程序的所有function，以nginx为例<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  # 查看Nginx可用的探针点</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  sudo</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> stap</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -L</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \'process(\\"/usr/local/openresty/nginx/sbin/nginx\\").function(\\"*\\")\'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">还有一种方式是：使用nm</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ./sbin/nginx，但是看不到参数和文件位置</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  # 看到的输出如下：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">  ...</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_variables_add_core_vars@src/http/ngx_http_variables.c:2592\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$cf</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_conf_t*</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_variables_init_vars@src/http/ngx_http_variables.c:2635\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$cf</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_conf_t* </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$hash</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_hash_init_t</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_wait_request_handler@src/http/ngx_http_request.c:375\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$rev</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_event_t*</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_weak_etag@src/http/ngx_http_core_module.c:1703\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$r</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_http_request_t*</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_write_filter@src/http/ngx_http_write_filter_module.c:48\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$r</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_http_request_t* </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$in</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_chain_t*</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_write_filter_init@src/http/ngx_http_write_filter_module.c:362\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$cf</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_conf_t*</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_write_request_body@src/http/ngx_http_request_body.c:484\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$r</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_http_request_t*</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_writer@src/http/ngx_http_request.c:2786\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$r</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_http_request_t*</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_http_xss_body_filter@../xss-nginx-module-0.06/src/ngx_http_xss_filter_module.c:264\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$r</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_http_request_t* </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$in</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_chain_t* </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$ll</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_chain_t**</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>找到需要添加探测点的函数、结构体、变量\\n<ul>\\n<li>假设我们需要找nginx中，某个URI的函数调用栈信息</li>\\n<li>添加探测点之前，我们需要一些基础知识。nginx关闭连接的标准函数为：<code>ngx_close_connection</code></li>\\n<li>通过如下命令，查看当前版本是否可以添加相应探测点<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">sudo</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> stap</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -L</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \'process(\\"/usr/local/openresty/nginx/sbin/nginx\\").function(\\"*\\")\'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">|</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">grep</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ngx_close_connection</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">process(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"/usr/local/openresty/nginx/sbin/nginx\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">).function(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"ngx_close_connection@src/core/ngx_connection.c:1179\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">$c</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:ngx_connection_t*</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>这样我们确认当前的nginx版本存在函数，且得到该函数的第一个参数为<code>$c</code>，属于结构体指针<code>ngx_connection_t*</code></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}')},36995:(s,i)=>{i.A=(s,i)=>{const n=s.__vccOpts||s;for(const[s,a]of i)n[s]=a;return n}}}]);