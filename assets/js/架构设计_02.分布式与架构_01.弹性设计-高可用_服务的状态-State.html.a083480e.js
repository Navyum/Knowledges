"use strict";(self.webpackChunknavyum_blog=self.webpackChunknavyum_blog||[]).push([[22915],{36995:(e,t)=>{t.A=(e,t)=>{const n=e.__vccOpts||e;for(const[e,o]of t)n[e]=o;return n}},68745:(e,t,n)=>{n.r(t),n.d(t,{comp:()=>E,data:()=>r});var o=n(6254);const p={},E=(0,n(36995).A)(p,[["render",function(e,t){return(0,o.uX)(),(0,o.CE)("div",null,t[0]||(t[0]=[(0,o.Fv)('<h1 id="服务的状态" tabindex="-1"><a class="header-anchor" href="#服务的状态"><span>服务的状态</span></a></h1><p>含义：</p><pre><code>为了保留程序的一些数据或是上下文。\n\n程序调用的结果。\n\n服务组合下的上下文。\n\n服务的配置。\n\ne.g 每一次请求的状态，用户登录Session\n</code></pre><p>无状态实现方式：</p><pre><code>特点：可以随意扩展或删除节点\n\n本质：转移责任\n\n把状态保存到其他的地方。e.g. Redis ，MySQL ，高可用的强一致性的存储ZooKeeper/Etcd ，分布式文件系统\n</code></pre><p>拓展：</p><p>面向对象是将数据和方法放一起，无状态是将数据和方法分离。（存算分离）</p><p>无状态的服务需要我们把数据同步到不同的节点上，而有状态的服务通过 Sticky Session 做数据分片。</p>',8)]))}]]),r=JSON.parse('{"path":"/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/02.%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E6%9E%B6%E6%9E%84/01.%E5%BC%B9%E6%80%A7%E8%AE%BE%E8%AE%A1-%E9%AB%98%E5%8F%AF%E7%94%A8/%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%8A%B6%E6%80%81-State.html","title":"服务的状态","lang":"zh-CN","frontmatter":{"description":"服务的状态 含义： 无状态实现方式： 拓展： 面向对象是将数据和方法放一起，无状态是将数据和方法分离。（存算分离） 无状态的服务需要我们把数据同步到不同的节点上，而有状态的服务通过 Sticky Session 做数据分片。","head":[["meta",{"property":"og:url","content":"https://myblog.camscanner.top/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/02.%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E6%9E%B6%E6%9E%84/01.%E5%BC%B9%E6%80%A7%E8%AE%BE%E8%AE%A1-%E9%AB%98%E5%8F%AF%E7%94%A8/%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%8A%B6%E6%80%81-State.html"}],["meta",{"property":"og:site_name","content":"Navyum\'s Blog"}],["meta",{"property":"og:title","content":"服务的状态"}],["meta",{"property":"og:description","content":"服务的状态 含义： 无状态实现方式： 拓展： 面向对象是将数据和方法放一起，无状态是将数据和方法分离。（存算分离） 无状态的服务需要我们把数据同步到不同的节点上，而有状态的服务通过 Sticky Session 做数据分片。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-15T10:30:52.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-15T10:30:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"服务的状态\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-15T10:30:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Navyum\\",\\"url\\":\\"https://myblog.camscanner.top\\"}]}"]]},"git":{"createdTime":1749983452000,"updatedTime":1749983452000,"contributors":[{"name":"Navyum","username":"Navyum","email":"36869790+Navyum@users.noreply.github.com","commits":1,"url":"https://github.com/Navyum"}]},"readingTime":{"minutes":0.62,"words":187},"filePathRelative":"架构设计/02.分布式与架构/01.弹性设计-高可用/服务的状态-State.md","localizedDate":"2025年6月15日","excerpt":"\\n<p>含义：</p>\\n<pre><code>为了保留程序的一些数据或是上下文。\\n\\n程序调用的结果。\\n\\n服务组合下的上下文。\\n\\n服务的配置。\\n\\ne.g 每一次请求的状态，用户登录Session\\n</code></pre>\\n<p>无状态实现方式：</p>\\n<pre><code>特点：可以随意扩展或删除节点\\n\\n本质：转移责任\\n\\n把状态保存到其他的地方。e.g. Redis ，MySQL ，高可用的强一致性的存储ZooKeeper/Etcd ，分布式文件系统\\n</code></pre>\\n<p>拓展：</p>\\n<p>面向对象是将数据和方法放一起，无状态是将数据和方法分离。（存算分离）</p>\\n<p>无状态的服务需要我们把数据同步到不同的节点上，而有状态的服务通过 Sticky Session 做数据分片。</p>","autoDesc":true}')}}]);