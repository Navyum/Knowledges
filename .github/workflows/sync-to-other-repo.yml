name: Sync Folders to Another Repo

on:
  push:
    branches: [ main ]  # 或你需要同步的分支
  workflow_dispatch:  # 手动触发

jobs:
  sync-md-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show workspace structure
        run: |
          pwd
          ls -l

      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: Navyum/Knowledge   # 修正仓库名称大小写
          token: ${{ secrets.TARGET_REPO_TOKEN }}  # 需要在主仓库设置此 secret
          path: Knowledge
          persist-credentials: false

      - name: Show workspace structure
        run: |
          ls -l
          ls -l Knowledge

      - name: Sync folders (force overwrite, keep dot folders)
        run: |
          # 递归删除所有非.开头的文件夹
          find Knowledge -maxdepth 1 -type d ! -name '.' ! -name '.*' -exec rm -rf {} +
          ls -l 
          # 复制主仓库的docs目录下的符合规则的文件夹到目标仓库
          DIRS=($(find docs -mindepth 1 -maxdepth 1 -type d ! -name '.' ! -name '.*' ! -name '_*' -printf '%f\n'))
          echo "DIRS: ${DIRS[@]}"
          for d in "${DIRS[@]}"; do
            cp -r "docs/$d" Knowledge/
          done
          ls -l 

      - name: Check TARGET_REPO_TOKEN
        run: |
          if [ -z "${{ secrets.TARGET_REPO_TOKEN }}" ]; then
            echo "Error: TARGET_REPO_TOKEN is not set or empty"
            exit 1
          else
            echo "TARGET_REPO_TOKEN is set"
            # 测试 token 是否有效（不显示 token 内容）
            if curl -s -H "Authorization: token ${{ secrets.TARGET_REPO_TOKEN }}" https://api.github.com/user | grep -q '"login"'; then
              echo "TARGET_REPO_TOKEN is valid"
            else
              echo "Error: TARGET_REPO_TOKEN is invalid"
              exit 1
            fi
          fi

      - name: Commit & Push to target repo
        run: |
          cd Knowledge
          git config --global user.name "Sync Bot"
          git config --global user.email "sync-bot@example.com"
          git add -A
          git commit -m "[sync] Force update from source repo" || exit 0
          echo ${{ secrets.TARGET_REPO_TOKEN }}
          git remote set-url origin https://${{ secrets.TARGET_REPO_TOKEN }}@github.com/Navyum/Knowledge.git
          
          # 检查权限
          echo "=== 权限检查 ==="
          echo "1. 检查远程仓库访问权限..."
          if git ls-remote origin > /dev/null 2>&1; then
            echo "✓ 可以访问远程仓库"
          else
            echo "✗ 无法访问远程仓库"
            exit 1
          fi
          
          echo "2. 检查分支访问权限..."
          if git ls-remote origin main > /dev/null 2>&1; then
            echo "✓ 可以访问 main 分支"
          else
            echo "✗ 无法访问 main 分支"
            exit 1
          fi
          
          echo "3. 检查推送权限..."
          if git push --dry-run origin main > /dev/null 2>&1; then
            echo "✓ 有推送权限"
          else
            echo "✗ 没有推送权限"
            exit 1
          fi
          
          echo "=== 开始推送 ==="
          git push origin main
